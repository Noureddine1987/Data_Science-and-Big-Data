



Inro to Methods in Pandas which works on objects.

Methods actually does modifications adding values, removing values to the objects

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

price_rates_list = [23,56,89,76,79,90]
pd.Series(price_rates_list)

0    23
1    56
2    89
3    76
4    79
5    90
dtype: int64

 s = pd.Series(price_rates_list)

s

0    23
1    56
2    89
3    76
4    79
5    90
dtype: int64

s.sum()  # calling sum method to do add the each element in the list 

413

s.product()   # it multiply all the values in the list 

61942547520

s.mean() # mean is for find the avarage 

68.83333333333333

s.min() # minimum value in the list using min() method

23

s.max() # maximum value in the list 

90

parameters and arguments

fruits = ["Apple","Banana","Oranges","Grapes","Cherries"]

months = ["Jan","Feb","March","April","May"]

pd.Series()

0       Apple
1      Banana
2     Oranges
3      Grapes
4    Cherries
dtype: object

 Here we are passing fruits and months as argumetns to Series , fruits as a data and months as an index type.
    
    # default argumens signature in series 
     Init signature: pd.Series(data=None, index=None, dtype=None, name=None, copy=False, fastpath=False)
    
    Here , data = fruits, index= months , insted of default index values, default index in pandas is numerical index

pd.Series(fruits, months) 

Jan         Apple
Feb        Banana
March     Oranges
April      Grapes
May      Cherries
dtype: object

you can also give parameter names explicitly

pd.Series(data = fruits, index= months)

Jan         Apple
Feb        Banana
March     Oranges
April      Grapes
May      Cherries
dtype: object

another way to give index parametar 

pd.Series(fruits, index= months)

Jan         Apple
Feb        Banana
March     Oranges
April      Grapes
May      Cherries
dtype: object

import series with read_csv method()

pd.read_csv("pokemon.csv")  # here you get a data frame as a result , basically it's table with multiple rows and cloumns 

	Pokemon 	Type
0 	Bulbasaur 	Grass
1 	Ivysaur 	Grass
2 	Venusaur 	Grass
3 	Charmander 	Fire
4 	Charmeleon 	Fire
5 	Charizard 	Fire
6 	Squirtle 	Water
7 	Wartortle 	Water
8 	Blastoise 	Water
9 	Caterpie 	Bug
10 	Metapod 	Bug
11 	Butterfree 	Bug
12 	Weedle 	Bug
13 	Kakuna 	Bug
14 	Beedrill 	Bug
15 	Pidgey 	Normal
16 	Pidgeotto 	Normal
17 	Pidgeot 	Normal
18 	Rattata 	Normal
19 	Raticate 	Normal
20 	Spearow 	Normal
21 	Fearow 	Normal
22 	Ekans 	Poison
23 	Arbok 	Poison
24 	Pikachu 	Electric
25 	Raichu 	Electric
26 	Sandshrew 	Ground
27 	Sandslash 	Ground
28 	Nidoran 	Poison
29 	Nidorina 	Poison
... 	... 	...
691 	Clauncher 	Water
692 	Clawitzer 	Water
693 	Helioptile 	Electric
694 	Heliolisk 	Electric
695 	Tyrunt 	Rock
696 	Tyrantrum 	Rock
697 	Amaura 	Rock
698 	Aurorus 	Rock
699 	Sylveon 	Fairy
700 	Hawlucha 	Fighting
701 	Dedenne 	Electric
702 	Carbink 	Rock
703 	Goomy 	Dragon
704 	Sliggoo 	Dragon
705 	Goodra 	Dragon
706 	Klefki 	Steel
707 	Phantump 	Ghost
708 	Trevenant 	Ghost
709 	Pumpkaboo 	Ghost
710 	Gourgeist 	Ghost
711 	Bergmite 	Ice
712 	Avalugg 	Ice
713 	Noibat 	Flying
714 	Noivern 	Flying
715 	Xerneas 	Fairy
716 	Yveltal 	Dark
717 	Zygarde 	Dragon
718 	Diancie 	Rock
719 	Hoopa 	Psychic
720 	Volcanion 	Fire

721 rows × 2 columns

pd.read_csv("pokemon.csv", usecols =["Pokemon"], squeeze=True) #you will get the required columns using usecols parameter 

0       Bulbasaur
1         Ivysaur
2        Venusaur
3      Charmander
4      Charmeleon
5       Charizard
6        Squirtle
7       Wartortle
8       Blastoise
9        Caterpie
10        Metapod
11     Butterfree
12         Weedle
13         Kakuna
14       Beedrill
15         Pidgey
16      Pidgeotto
17        Pidgeot
18        Rattata
19       Raticate
20        Spearow
21         Fearow
22          Ekans
23          Arbok
24        Pikachu
25         Raichu
26      Sandshrew
27      Sandslash
28        Nidoran
29       Nidorina
          ...    
691     Clauncher
692     Clawitzer
693    Helioptile
694     Heliolisk
695        Tyrunt
696     Tyrantrum
697        Amaura
698       Aurorus
699       Sylveon
700      Hawlucha
701       Dedenne
702       Carbink
703         Goomy
704       Sliggoo
705        Goodra
706        Klefki
707      Phantump
708     Trevenant
709     Pumpkaboo
710     Gourgeist
711      Bergmite
712       Avalugg
713        Noibat
714       Noivern
715       Xerneas
716       Yveltal
717       Zygarde
718       Diancie
719         Hoopa
720     Volcanion
Name: Pokemon, Length: 721, dtype: object

pokeman = pd.read_csv("pokemon.csv", squeeze=True) 

pokeman

	Pokemon 	Type
0 	Bulbasaur 	Grass
1 	Ivysaur 	Grass
2 	Venusaur 	Grass
3 	Charmander 	Fire
4 	Charmeleon 	Fire
5 	Charizard 	Fire
6 	Squirtle 	Water
7 	Wartortle 	Water
8 	Blastoise 	Water
9 	Caterpie 	Bug
10 	Metapod 	Bug
11 	Butterfree 	Bug
12 	Weedle 	Bug
13 	Kakuna 	Bug
14 	Beedrill 	Bug
15 	Pidgey 	Normal
16 	Pidgeotto 	Normal
17 	Pidgeot 	Normal
18 	Rattata 	Normal
19 	Raticate 	Normal
20 	Spearow 	Normal
21 	Fearow 	Normal
22 	Ekans 	Poison
23 	Arbok 	Poison
24 	Pikachu 	Electric
25 	Raichu 	Electric
26 	Sandshrew 	Ground
27 	Sandslash 	Ground
28 	Nidoran 	Poison
29 	Nidorina 	Poison
... 	... 	...
691 	Clauncher 	Water
692 	Clawitzer 	Water
693 	Helioptile 	Electric
694 	Heliolisk 	Electric
695 	Tyrunt 	Rock
696 	Tyrantrum 	Rock
697 	Amaura 	Rock
698 	Aurorus 	Rock
699 	Sylveon 	Fairy
700 	Hawlucha 	Fighting
701 	Dedenne 	Electric
702 	Carbink 	Rock
703 	Goomy 	Dragon
704 	Sliggoo 	Dragon
705 	Goodra 	Dragon
706 	Klefki 	Steel
707 	Phantump 	Ghost
708 	Trevenant 	Ghost
709 	Pumpkaboo 	Ghost
710 	Gourgeist 	Ghost
711 	Bergmite 	Ice
712 	Avalugg 	Ice
713 	Noibat 	Flying
714 	Noivern 	Flying
715 	Xerneas 	Fairy
716 	Yveltal 	Dark
717 	Zygarde 	Dragon
718 	Diancie 	Rock
719 	Hoopa 	Psychic
720 	Volcanion 	Fire

721 rows × 2 columns

google = pd.read_csv("google_stock_price.csv", squeeze=True)  # squeeze prameter for read data as a sereis not in a dataframe

google

0        50.12
1        54.10
2        54.65
3        52.38
4        52.95
5        53.90
6        53.02
7        50.95
8        51.13
9        50.07
10       50.70
11       49.95
12       50.74
13       51.10
14       51.10
15       52.61
16       53.70
17       55.69
18       55.94
19       56.93
20       58.69
21       59.62
22       58.86
23       59.13
24       60.35
25       59.86
26       59.07
27       63.37
28       65.47
29       64.74
         ...  
2982    675.22
2983    668.26
2984    680.04
2985    684.11
2986    692.10
2987    699.21
2988    694.49
2989    697.77
2990    695.36
2991    705.63
2992    715.09
2993    720.64
2994    716.98
2995    720.95
2996    719.85
2997    733.78
2998    736.96
2999    741.19
3000    738.63
3001    742.74
3002    739.77
3003    738.42
3004    741.77
3005    745.91
3006    768.79
3007    772.88
3008    771.07
3009    773.18
3010    771.61
3011    782.22
Name: Stock Price, Length: 3012, dtype: float64

The head() and tail() method i Pandas

pokemon =pd.read_csv("pokemon.csv", usecols =["Pokemon"], squeeze=True)
google = pd.read_csv("google_stock_price.csv", squeeze=True)

pokemon.head()  # it give a brnad new series object , taking five rows and making copy of them as new series object
                # it give default as first 5 rows
                # But you can specify how many rows to want see  head(10)

0     Bulbasaur
1       Ivysaur
2      Venusaur
3    Charmander
4    Charmeleon
Name: Pokemon, dtype: object

pokemon.head(1)

0    Bulbasaur
Name: Pokemon, dtype: object

google.tail(1)

3011    782.22
Name: Stock Price, dtype: float64

Built-in Functions

# number of elements in list , number of elements in String, no of rows in Series
len( pokemon)
len(google)

3012

type(pokemon)

pandas.core.series.Series

# it give us a output of all of the avialable attributes and methods with in the object

dir(pokemon)

['T',
 '_AXIS_ALIASES',
 '_AXIS_IALIASES',
 '_AXIS_LEN',
 '_AXIS_NAMES',
 '_AXIS_NUMBERS',
 '_AXIS_ORDERS',
 '_AXIS_REVERSED',
 '_AXIS_SLICEMAP',
 '__abs__',
 '__add__',
 '__and__',
 '__array__',
 '__array_prepare__',
 '__array_priority__',
 '__array_wrap__',
 '__bool__',
 '__bytes__',
 '__class__',
 '__contains__',
 '__copy__',
 '__deepcopy__',
 '__delattr__',
 '__delitem__',
 '__dict__',
 '__dir__',
 '__div__',
 '__divmod__',
 '__doc__',
 '__eq__',
 '__finalize__',
 '__float__',
 '__floordiv__',
 '__format__',
 '__ge__',
 '__getattr__',
 '__getattribute__',
 '__getitem__',
 '__getstate__',
 '__gt__',
 '__hash__',
 '__iadd__',
 '__iand__',
 '__ifloordiv__',
 '__imod__',
 '__imul__',
 '__init__',
 '__init_subclass__',
 '__int__',
 '__invert__',
 '__ior__',
 '__ipow__',
 '__isub__',
 '__iter__',
 '__itruediv__',
 '__ixor__',
 '__le__',
 '__len__',
 '__long__',
 '__lt__',
 '__mod__',
 '__module__',
 '__mul__',
 '__ne__',
 '__neg__',
 '__new__',
 '__nonzero__',
 '__or__',
 '__pow__',
 '__radd__',
 '__rand__',
 '__rdiv__',
 '__reduce__',
 '__reduce_ex__',
 '__repr__',
 '__rfloordiv__',
 '__rmod__',
 '__rmul__',
 '__ror__',
 '__round__',
 '__rpow__',
 '__rsub__',
 '__rtruediv__',
 '__rxor__',
 '__setattr__',
 '__setitem__',
 '__setstate__',
 '__sizeof__',
 '__str__',
 '__sub__',
 '__subclasshook__',
 '__truediv__',
 '__unicode__',
 '__weakref__',
 '__xor__',
 '_accessors',
 '_add_numeric_operations',
 '_add_series_only_operations',
 '_add_series_or_dataframe_operations',
 '_agg_by_level',
 '_agg_doc',
 '_aggregate',
 '_aggregate_multiple_funcs',
 '_align_frame',
 '_align_series',
 '_allow_index_ops',
 '_at',
 '_binop',
 '_box_item_values',
 '_builtin_table',
 '_can_hold_na',
 '_check_inplace_setting',
 '_check_is_chained_assignment_possible',
 '_check_percentile',
 '_check_setitem_copy',
 '_clear_item_cache',
 '_clip_with_one_bound',
 '_clip_with_scalar',
 '_consolidate',
 '_consolidate_inplace',
 '_construct_axes_dict',
 '_construct_axes_dict_for_slice',
 '_construct_axes_dict_from',
 '_construct_axes_from_arguments',
 '_constructor',
 '_constructor_expanddim',
 '_constructor_sliced',
 '_convert',
 '_create_indexer',
 '_cython_table',
 '_deprecations',
 '_dir_additions',
 '_dir_deletions',
 '_drop_axis',
 '_expand_axes',
 '_formatting_values',
 '_from_axes',
 '_get_axis',
 '_get_axis_name',
 '_get_axis_number',
 '_get_axis_resolvers',
 '_get_block_manager_axis',
 '_get_bool_data',
 '_get_cacher',
 '_get_index_resolvers',
 '_get_item_cache',
 '_get_numeric_data',
 '_get_value',
 '_get_values',
 '_get_values_tuple',
 '_get_with',
 '_gotitem',
 '_iat',
 '_iget_item_cache',
 '_iloc',
 '_index',
 '_indexed_same',
 '_info_axis',
 '_info_axis_name',
 '_info_axis_number',
 '_init_mgr',
 '_internal_names',
 '_internal_names_set',
 '_is_builtin_func',
 '_is_cached',
 '_is_cython_func',
 '_is_datelike_mixed_type',
 '_is_mixed_type',
 '_is_numeric_mixed_type',
 '_is_view',
 '_ix',
 '_ixs',
 '_loc',
 '_maybe_cache_changed',
 '_maybe_update_cacher',
 '_metadata',
 '_needs_reindex_multi',
 '_obj_with_exclusions',
 '_protect_consolidate',
 '_reduce',
 '_reindex_axes',
 '_reindex_axis',
 '_reindex_indexer',
 '_reindex_multi',
 '_reindex_with_indexers',
 '_repr_data_resource_',
 '_repr_latex_',
 '_reset_cache',
 '_reset_cacher',
 '_selected_obj',
 '_selection',
 '_selection_list',
 '_selection_name',
 '_set_as_cached',
 '_set_axis',
 '_set_axis_name',
 '_set_is_copy',
 '_set_item',
 '_set_labels',
 '_set_name',
 '_set_subtyp',
 '_set_value',
 '_set_values',
 '_set_with',
 '_set_with_engine',
 '_setup_axes',
 '_shallow_copy',
 '_slice',
 '_stat_axis',
 '_stat_axis_name',
 '_stat_axis_number',
 '_take',
 '_to_dict_of_blocks',
 '_try_aggregate_string_function',
 '_typ',
 '_unpickle_series_compat',
 '_update_inplace',
 '_validate_dtype',
 '_values',
 '_where',
 '_xs',
 'abs',
 'add',
 'add_prefix',
 'add_suffix',
 'agg',
 'aggregate',
 'align',
 'all',
 'any',
 'append',
 'apply',
 'argmax',
 'argmin',
 'argsort',
 'as_matrix',
 'asfreq',
 'asobject',
 'asof',
 'astype',
 'at',
 'at_time',
 'autocorr',
 'axes',
 'base',
 'between',
 'between_time',
 'bfill',
 'bool',
 'clip',
 'clip_lower',
 'clip_upper',
 'combine',
 'combine_first',
 'compound',
 'compress',
 'copy',
 'corr',
 'count',
 'cov',
 'cummax',
 'cummin',
 'cumprod',
 'cumsum',
 'data',
 'describe',
 'diff',
 'div',
 'divide',
 'dot',
 'drop',
 'drop_duplicates',
 'dropna',
 'dtype',
 'dtypes',
 'duplicated',
 'empty',
 'eq',
 'equals',
 'ewm',
 'expanding',
 'factorize',
 'ffill',
 'fillna',
 'filter',
 'first',
 'first_valid_index',
 'flags',
 'floordiv',
 'from_array',
 'ftype',
 'ftypes',
 'ge',
 'get',
 'get_dtype_counts',
 'get_ftype_counts',
 'get_values',
 'groupby',
 'gt',
 'hasnans',
 'head',
 'hist',
 'iat',
 'idxmax',
 'idxmin',
 'iloc',
 'imag',
 'index',
 'infer_objects',
 'interpolate',
 'is_copy',
 'is_monotonic',
 'is_monotonic_decreasing',
 'is_monotonic_increasing',
 'is_unique',
 'isin',
 'isna',
 'isnull',
 'item',
 'items',
 'itemsize',
 'iteritems',
 'ix',
 'keys',
 'kurt',
 'kurtosis',
 'last',
 'last_valid_index',
 'le',
 'loc',
 'lt',
 'mad',
 'map',
 'mask',
 'max',
 'mean',
 'median',
 'memory_usage',
 'min',
 'mod',
 'mode',
 'mul',
 'multiply',
 'name',
 'nbytes',
 'ndim',
 'ne',
 'nlargest',
 'nonzero',
 'notna',
 'notnull',
 'nsmallest',
 'nunique',
 'pct_change',
 'pipe',
 'plot',
 'pop',
 'pow',
 'prod',
 'product',
 'ptp',
 'put',
 'quantile',
 'radd',
 'rank',
 'ravel',
 'rdiv',
 'real',
 'reindex',
 'reindex_axis',
 'reindex_like',
 'rename',
 'rename_axis',
 'reorder_levels',
 'repeat',
 'replace',
 'resample',
 'reset_index',
 'rfloordiv',
 'rmod',
 'rmul',
 'rolling',
 'round',
 'rpow',
 'rsub',
 'rtruediv',
 'sample',
 'searchsorted',
 'select',
 'sem',
 'set_axis',
 'shape',
 'shift',
 'size',
 'skew',
 'slice_shift',
 'sort_index',
 'sort_values',
 'squeeze',
 'std',
 'str',
 'strides',
 'sub',
 'subtract',
 'sum',
 'swapaxes',
 'swaplevel',
 'tail',
 'take',
 'to_clipboard',
 'to_csv',
 'to_dense',
 'to_dict',
 'to_excel',
 'to_frame',
 'to_hdf',
 'to_json',
 'to_latex',
 'to_msgpack',
 'to_period',
 'to_pickle',
 'to_sparse',
 'to_sql',
 'to_string',
 'to_timestamp',
 'to_xarray',
 'tolist',
 'transform',
 'transpose',
 'truediv',
 'truncate',
 'tshift',
 'tz_convert',
 'tz_localize',
 'unique',
 'unstack',
 'update',
 'valid',
 'value_counts',
 'values',
 'var',
 'view',
 'where',
 'xs']

 #if we pass a series of strings ,it's going to returns a sorted list of those values in alphabetical order

sorted(pokemon)
 # if you pass a numerical values , it will give a list of sorted values in ascending order
sorted(google)

[49.95,
 50.07,
 50.12,
 50.7,
 50.74,
 50.95,
 51.1,
 51.1,
 51.13,
 52.38,
 52.61,
 52.95,
 53.02,
 53.7,
 53.9,
 54.1,
 54.65,
 55.69,
 55.94,
 56.93,
 58.69,
 58.86,
 59.07,
 59.13,
 59.62,
 59.86,
 60.35,
 63.37,
 64.74,
 65.47,
 66.22,
 67.46,
 67.56,
 68.47,
 68.63,
 68.8,
 69.12,
 69.36,
 70.17,
 70.38,
 70.93,
 71.98,
 73.9,
 74.51,
 74.62,
 82.47,
 83.68,
 83.69,
 83.85,
 84.27,
 84.59,
 84.62,
 84.91,
 85.14,
 85.63,
 85.74,
 86.13,
 86.16,
 86.19,
 86.19,
 86.63,
 87.29,
 87.41,
 87.71,
 88.06,
 88.15,
 88.47,
 88.81,
 89.21,
 89.22,
 89.26,
 89.4,
 89.54,
 89.56,
 89.61,
 89.61,
 89.7,
 89.8,
 89.89,
 89.9,
 89.93,
 89.93,
 89.95,
 90.11,
 90.13,
 90.16,
 90.27,
 90.35,
 90.43,
 90.58,
 90.62,
 90.81,
 90.9,
 90.91,
 91.42,
 91.78,
 92.26,
 92.34,
 92.41,
 92.42,
 92.5,
 92.51,
 92.55,
 92.84,
 92.86,
 92.89,
 92.94,
 93.06,
 93.39,
 93.41,
 93.61,
 93.61,
 93.86,
 93.9,
 93.9,
 93.95,
 94.05,
 94.18,
 94.19,
 94.31,
 94.35,
 94.52,
 94.53,
 95.07,
 95.22,
 95.59,
 95.6,
 95.63,
 95.69,
 95.74,
 95.85,
 95.86,
 95.93,
 96.28,
 96.3,
 96.35,
 96.37,
 96.4,
 96.52,
 96.55,
 96.66,
 96.67,
 96.78,
 96.83,
 96.86,
 96.88,
 96.88,
 97.15,
 97.34,
 97.43,
 97.52,
 97.57,
 97.59,
 97.71,
 97.92,
 97.92,
 98.55,
 98.7,
 98.85,
 98.88,
 98.95,
 99.11,
 99.22,
 99.89,
 101.25,
 101.85,
 102.01,
 102.08,
 102.88,
 105.32,
 107.8,
 109.27,
 109.62,
 109.78,
 109.89,
 111.03,
 111.65,
 112.9,
 112.98,
 113.38,
 113.79,
 113.9,
 114.14,
 114.25,
 114.51,
 115.41,
 115.53,
 116.45,
 119.46,
 119.47,
 120.68,
 127.6,
 127.87,
 128.59,
 129.47,
 129.65,
 130.27,
 131.08,
 132.86,
 132.87,
 136.87,
 137.03,
 137.26,
 137.42,
 138.5,
 138.58,
 139.04,
 139.58,
 139.64,
 139.65,
 139.86,
 139.86,
 139.95,
 139.99,
 140.0,
 140.88,
 141.11,
 141.14,
 141.15,
 141.23,
 141.23,
 141.65,
 141.85,
 141.86,
 141.88,
 142.41,
 142.68,
 142.7,
 142.86,
 142.98,
 143.01,
 143.21,
 143.41,
 143.49,
 143.74,
 143.78,
 143.81,
 143.86,
 144.08,
 144.08,
 144.51,
 144.71,
 144.72,
 145.3,
 145.32,
 145.35,
 145.48,
 145.48,
 145.62,
 145.64,
 145.66,
 145.75,
 145.9,
 146.03,
 146.21,
 146.33,
 146.41,
 146.53,
 146.6,
 146.93,
 147.29,
 147.55,
 147.62,
 147.71,
 147.78,
 147.9,
 147.92,
 147.97,
 148.32,
 148.41,
 148.48,
 148.5,
 148.56,
 148.56,
 148.57,
 148.72,
 148.86,
 149.28,
 149.35,
 149.4,
 149.45,
 149.62,
 149.69,
 149.91,
 149.95,
 149.96,
 150.03,
 150.29,
 150.33,
 150.33,
 150.44,
 150.85,
 150.9,
 151.05,
 151.16,
 151.32,
 151.35,
 151.39,
 151.4,
 151.45,
 151.49,
 151.74,
 151.9,
 152.35,
 152.67,
 152.83,
 152.85,
 152.9,
 153.1,
 153.67,
 153.8,
 153.93,
 154.13,
 154.2,
 154.26,
 154.66,
 154.72,
 154.8,
 154.85,
 154.93,
 154.98,
 155.17,
 155.18,
 155.2,
 155.34,
 155.53,
 155.57,
 155.68,
 155.79,
 155.84,
 155.88,
 156.19,
 156.22,
 156.34,
 156.81,
 156.81,
 156.98,
 157.0,
 157.38,
 157.46,
 157.52,
 157.72,
 158.07,
 158.8,
 159.18,
 159.23,
 159.3,
 159.69,
 160.5,
 160.84,
 161.6,
 161.77,
 162.05,
 162.19,
 162.43,
 162.48,
 162.58,
 163.42,
 163.86,
 164.33,
 164.58,
 164.81,
 164.86,
 164.91,
 165.4,
 165.44,
 165.57,
 165.83,
 166.38,
 166.86,
 167.5,
 168.36,
 168.42,
 168.58,
 168.83,
 168.89,
 169.1,
 169.22,
 169.42,
 169.48,
 169.73,
 169.78,
 169.79,
 169.94,
 170.05,
 170.11,
 170.65,
 170.77,
 170.95,
 171.02,
 171.15,
 171.16,
 171.17,
 171.33,
 171.33,
 171.49,
 171.49,
 171.86,
 172.08,
 172.55,
 172.68,
 172.83,
 173.05,
 173.07,
 173.28,
 173.41,
 173.68,
 173.86,
 173.92,
 174.13,
 174.15,
 174.16,
 175.4,
 175.98,
 176.33,
 176.35,
 176.38,
 176.47,
 176.68,
 176.76,
 176.87,
 177.54,
 177.66,
 178.66,
 178.82,
 178.84,
 178.91,
 179.08,
 179.15,
 179.21,
 179.5,
 179.67,
 180.82,
 181.07,
 181.12,
 181.13,
 181.17,
 181.19,
 181.34,
 182.04,
 182.22,
 182.56,
 182.72,
 183.05,
 183.11,
 183.29,
 183.43,
 183.78,
 183.87,
 183.94,
 184.07,
 184.19,
 184.19,
 184.27,
 184.36,
 184.53,
 184.66,
 184.71,
 184.82,
 185.29,
 185.31,
 185.42,
 185.45,
 185.46,
 185.72,
 185.78,
 185.88,
 186.06,
 186.08,
 186.44,
 186.53,
 186.68,
 186.74,
 186.88,
 186.91,
 187.03,
 187.06,
 187.51,
 187.57,
 187.6,
 187.91,
 188.04,
 188.28,
 188.41,
 188.46,
 188.51,
 188.74,
 188.79,
 188.85,
 188.87,
 188.9,
 188.96,
 189.06,
 189.08,
 189.11,
 189.2,
 189.29,
 189.39,
 189.46,
 189.47,
 189.5,
 189.53,
 189.56,
 189.65,
 189.88,
 190.18,
 190.28,
 190.29,
 190.31,
 190.31,
 190.32,
 190.43,
 190.48,
 190.54,
 190.58,
 190.59,
 191.01,
 191.12,
 191.3,
 191.49,
 191.66,
 191.74,
 191.85,
 191.99,
 192.0,
 192.15,
 192.36,
 192.56,
 192.71,
 192.78,
 192.78,
 193.06,
 193.07,
 193.09,
 193.11,
 193.26,
 193.31,
 193.37,
 193.39,
 193.56,
 193.67,
 193.87,
 193.88,
 194.03,
 194.18,
 194.49,
 194.55,
 194.58,
 194.66,
 194.76,
 194.8,
 194.8,
 194.8,
 194.86,
 194.99,
 195.0,
 195.02,
 195.05,
 195.15,
 195.25,
 195.3,
 195.35,
 195.54,
 195.75,
 195.92,
 196.2,
 196.45,
 196.55,
 196.65,
 196.89,
 196.95,
 197.18,
 197.19,
 197.2,
 197.29,
 197.32,
 197.79,
 197.82,
 198.05,
 198.11,
 198.12,
 198.22,
 198.29,
 198.3,
 198.39,
 198.88,
 199.24,
 199.25,
 199.3,
 199.31,
 199.53,
 199.78,
 199.9,
 200.06,
 200.52,
 200.69,
 200.75,
 200.79,
 200.86,
 200.88,
 200.96,
 201.04,
 201.26,
 201.29,
 201.29,
 201.32,
 201.52,
 201.53,
 201.55,
 201.57,
 201.59,
 201.69,
 201.7,
 201.79,
 201.79,
 201.82,
 201.91,
 201.91,
 201.92,
 201.97,
 201.98,
 202.07,
 202.23,
 202.25,
 202.58,
 202.64,
 202.72,
 202.85,
 202.88,
 203.08,
 203.21,
 203.22,
 203.23,
 203.46,
 203.47,
 203.74,
 203.79,
 203.79,
 204.04,
 204.2,
 204.21,
 204.27,
 204.4,
 204.44,
 204.48,
 204.6,
 204.63,
 204.74,
 204.99,
 204.99,
 205.04,
 205.12,
 205.38,
 205.65,
 205.7,
 206.1,
 206.6,
 206.82,
 206.84,
 206.87,
 206.99,
 207.04,
 207.14,
 207.22,
 207.29,
 207.37,
 207.64,
 207.68,
 207.79,
 207.98,
 208.03,
 208.18,
 208.41,
 208.42,
 208.54,
 208.64,
 208.7,
 208.76,
 208.89,
 209.12,
 209.27,
 209.29,
 209.44,
 209.46,
 209.73,
 209.76,
 209.8,
 209.83,
 209.86,
 210.01,
 210.04,
 210.11,
 210.52,
 210.58,
 210.66,
 211.05,
 211.22,
 211.38,
 211.39,
 211.53,
 211.86,
 211.94,
 212.07,
 212.09,
 212.11,
 212.13,
 212.21,
 212.45,
 212.77,
 212.82,
 212.95,
 213.04,
 213.07,
 213.11,
 213.13,
 213.2,
 213.37,
 213.44,
 213.51,
 213.54,
 213.63,
 213.74,
 213.99,
 214.1,
 214.29,
 214.29,
 214.42,
 214.66,
 214.85,
 214.86,
 214.87,
 214.91,
 215.25,
 215.3,
 215.61,
 215.78,
 215.8,
 216.08,
 216.11,
 216.13,
 216.28,
 216.46,
 216.53,
 216.56,
 216.66,
 216.71,
 216.92,
 217.34,
 217.4,
 217.59,
 217.82,
 217.9,
 218.0,
 218.06,
 218.33,
 218.45,
 218.61,
 218.74,
 218.82,
 218.87,
 219.12,
 219.17,
 219.32,
 219.36,
 219.53,
 219.58,
 219.7,
 219.71,
 219.87,
 219.92,
 220.01,
 220.03,
 220.2,
 220.25,
 221.08,
 221.24,
 221.28,
 221.29,
 221.29,
 221.3,
 221.76,
 221.82,
 221.9,
 221.94,
 222.08,
 222.18,
 222.22,
 222.23,
 222.25,
 222.4,
 222.42,
 222.42,
 222.6,
 222.87,
 223.14,
 223.2,
 223.39,
 223.63,
 223.78,
 223.89,
 224.16,
 224.35,
 224.5,
 224.55,
 224.78,
 224.87,
 224.9,
 224.95,
 225.16,
 225.26,
 225.34,
 225.39,
 225.47,
 225.6,
 225.88,
 226.12,
 226.25,
 226.28,
 226.64,
 226.74,
 226.9,
 227.08,
 227.13,
 227.15,
 227.29,
 227.33,
 227.56,
 227.59,
 227.65,
 227.87,
 228.05,
 228.05,
 228.08,
 228.28,
 228.32,
 228.5,
 228.53,
 228.54,
 228.55,
 228.77,
 228.85,
 228.87,
 228.92,
 229.04,
 229.06,
 229.08,
 229.19,
 229.32,
 229.57,
 229.61,
 229.77,
 229.94,
 229.97,
 230.01,
 230.05,
 230.23,
 230.42,
 230.5,
 230.5,
 230.6,
 230.66,
 230.68,
 230.71,
 230.71,
 230.78,
 230.79,
 230.91,
 231.05,
 231.17,
 231.22,
 231.27,
 231.36,
 231.41,
 231.58,
 231.58,
 231.75,
 231.8,
 231.86,
 231.86,
 231.97,
 231.97,
 232.03,
 232.14,
 232.23,
 232.27,
 232.39,
 232.39,
 232.6,
 232.62,
 232.62,
 232.66,
 232.73,
 232.8,
 232.86,
 232.89,
 232.91,
 233.02,
 233.14,
 233.17,
 233.22,
 233.32,
 233.35,
 233.4,
 233.46,
 233.51,
 233.52,
 233.56,
 233.67,
 233.7,
 233.75,
 233.77,
 233.78,
 233.87,
 234.06,
 234.08,
 234.13,
 234.17,
 234.27,
 234.3,
 234.39,
 234.65,
 234.72,
 234.74,
 234.77,
 234.91,
 234.92,
 235.05,
 235.06,
 235.07,
 235.23,
 235.24,
 235.27,
 235.28,
 235.31,
 235.32,
 235.35,
 235.45,
 235.45,
 235.5,
 235.52,
 235.58,
 235.59,
 235.66,
 235.79,
 235.8,
 235.81,
 235.83,
 236.05,
 236.06,
 236.07,
 236.08,
 236.1,
 236.16,
 236.19,
 236.38,
 236.42,
 236.54,
 236.64,
 236.65,
 236.75,
 236.77,
 236.84,
 236.9,
 236.93,
 237.2,
 237.26,
 237.27,
 237.31,
 237.32,
 237.36,
 237.46,
 237.5,
 237.57,
 237.68,
 237.69,
 237.69,
 237.69,
 237.77,
 237.83,
 237.85,
 237.96,
 238.05,
 238.17,
 238.24,
 238.3,
 238.32,
 238.32,
 238.34,
 238.51,
 238.53,
 238.53,
 238.76,
 239.26,
 239.27,
 239.29,
 239.3,
 239.32,
 239.69,
 239.87,
 239.91,
 ...]

# when you a given python series , it's going to take the values and turn them into a python list 
list(pokemon)

['Bulbasaur',
 'Ivysaur',
 'Venusaur',
 'Charmander',
 'Charmeleon',
 'Charizard',
 'Squirtle',
 'Wartortle',
 'Blastoise',
 'Caterpie',
 'Metapod',
 'Butterfree',
 'Weedle',
 'Kakuna',
 'Beedrill',
 'Pidgey',
 'Pidgeotto',
 'Pidgeot',
 'Rattata',
 'Raticate',
 'Spearow',
 'Fearow',
 'Ekans',
 'Arbok',
 'Pikachu',
 'Raichu',
 'Sandshrew',
 'Sandslash',
 'Nidoran',
 'Nidorina',
 'Nidoqueen',
 'Nidoran♂',
 'Nidorino',
 'Nidoking',
 'Clefairy',
 'Clefable',
 'Vulpix',
 'Ninetales',
 'Jigglypuff',
 'Wigglytuff',
 'Zubat',
 'Golbat',
 'Oddish',
 'Gloom',
 'Vileplume',
 'Paras',
 'Parasect',
 'Venonat',
 'Venomoth',
 'Diglett',
 'Dugtrio',
 'Meowth',
 'Persian',
 'Psyduck',
 'Golduck',
 'Mankey',
 'Primeape',
 'Growlithe',
 'Arcanine',
 'Poliwag',
 'Poliwhirl',
 'Poliwrath',
 'Abra',
 'Kadabra',
 'Alakazam',
 'Machop',
 'Machoke',
 'Machamp',
 'Bellsprout',
 'Weepinbell',
 'Victreebel',
 'Tentacool',
 'Tentacruel',
 'Geodude',
 'Graveler',
 'Golem',
 'Ponyta',
 'Rapidash',
 'Slowpoke',
 'Slowbro',
 'Magnemite',
 'Magneton',
 "Farfetch'd",
 'Doduo',
 'Dodrio',
 'Seel',
 'Dewgong',
 'Grimer',
 'Muk',
 'Shellder',
 'Cloyster',
 'Gastly',
 'Haunter',
 'Gengar',
 'Onix',
 'Drowzee',
 'Hypno',
 'Krabby',
 'Kingler',
 'Voltorb',
 'Electrode',
 'Exeggcute',
 'Exeggutor',
 'Cubone',
 'Marowak',
 'Hitmonlee',
 'Hitmonchan',
 'Lickitung',
 'Koffing',
 'Weezing',
 'Rhyhorn',
 'Rhydon',
 'Chansey',
 'Tangela',
 'Kangaskhan',
 'Horsea',
 'Seadra',
 'Goldeen',
 'Seaking',
 'Staryu',
 'Starmie',
 'Mr. Mime',
 'Scyther',
 'Jynx',
 'Electabuzz',
 'Magmar',
 'Pinsir',
 'Tauros',
 'Magikarp',
 'Gyarados',
 'Lapras',
 'Ditto',
 'Eevee',
 'Vaporeon',
 'Jolteon',
 'Flareon',
 'Porygon',
 'Omanyte',
 'Omastar',
 'Kabuto',
 'Kabutops',
 'Aerodactyl',
 'Snorlax',
 'Articuno',
 'Zapdos',
 'Moltres',
 'Dratini',
 'Dragonair',
 'Dragonite',
 'Mewtwo',
 'Mew',
 'Chikorita',
 'Bayleef',
 'Meganium',
 'Cyndaquil',
 'Quilava',
 'Typhlosion',
 'Totodile',
 'Croconaw',
 'Feraligatr',
 'Sentret',
 'Furret',
 'Hoothoot',
 'Noctowl',
 'Ledyba',
 'Ledian',
 'Spinarak',
 'Ariados',
 'Crobat',
 'Chinchou',
 'Lanturn',
 'Pichu',
 'Cleffa',
 'Igglybuff',
 'Togepi',
 'Togetic',
 'Natu',
 'Xatu',
 'Mareep',
 'Flaaffy',
 'Ampharos',
 'Bellossom',
 'Marill',
 'Azumarill',
 'Sudowoodo',
 'Politoed',
 'Hoppip',
 'Skiploom',
 'Jumpluff',
 'Aipom',
 'Sunkern',
 'Sunflora',
 'Yanma',
 'Wooper',
 'Quagsire',
 'Espeon',
 'Umbreon',
 'Murkrow',
 'Slowking',
 'Misdreavus',
 'Unown',
 'Wobbuffet',
 'Girafarig',
 'Pineco',
 'Forretress',
 'Dunsparce',
 'Gligar',
 'Steelix',
 'Snubbull',
 'Granbull',
 'Qwilfish',
 'Scizor',
 'Shuckle',
 'Heracross',
 'Sneasel',
 'Teddiursa',
 'Ursaring',
 'Slugma',
 'Magcargo',
 'Swinub',
 'Piloswine',
 'Corsola',
 'Remoraid',
 'Octillery',
 'Delibird',
 'Mantine',
 'Skarmory',
 'Houndour',
 'Houndoom',
 'Kingdra',
 'Phanpy',
 'Donphan',
 'Porygon2',
 'Stantler',
 'Smeargle',
 'Tyrogue',
 'Hitmontop',
 'Smoochum',
 'Elekid',
 'Magby',
 'Miltank',
 'Blissey',
 'Raikou',
 'Entei',
 'Suicune',
 'Larvitar',
 'Pupitar',
 'Tyranitar',
 'Lugia',
 'Ho-oh',
 'Celebi',
 'Treecko',
 'Grovyle',
 'Sceptile',
 'Torchic',
 'Combusken',
 'Blaziken',
 'Mudkip',
 'Marshtomp',
 'Swampert',
 'Poochyena',
 'Mightyena',
 'Zigzagoon',
 'Linoone',
 'Wurmple',
 'Silcoon',
 'Beautifly',
 'Cascoon',
 'Dustox',
 'Lotad',
 'Lombre',
 'Ludicolo',
 'Seedot',
 'Nuzleaf',
 'Shiftry',
 'Taillow',
 'Swellow',
 'Wingull',
 'Pelipper',
 'Ralts',
 'Kirlia',
 'Gardevoir',
 'Surskit',
 'Masquerain',
 'Shroomish',
 'Breloom',
 'Slakoth',
 'Vigoroth',
 'Slaking',
 'Nincada',
 'Ninjask',
 'Shedinja',
 'Whismur',
 'Loudred',
 'Exploud',
 'Makuhita',
 'Hariyama',
 'Azurill',
 'Nosepass',
 'Skitty',
 'Delcatty',
 'Sableye',
 'Mawile',
 'Aron',
 'Lairon',
 'Aggron',
 'Meditite',
 'Medicham',
 'Electrike',
 'Manectric',
 'Plusle',
 'Minun',
 'Volbeat',
 'Illumise',
 'Roselia',
 'Gulpin',
 'Swalot',
 'Carvanha',
 'Sharpedo',
 'Wailmer',
 'Wailord',
 'Numel',
 'Camerupt',
 'Torkoal',
 'Spoink',
 'Grumpig',
 'Spinda',
 'Trapinch',
 'Vibrava',
 'Flygon',
 'Cacnea',
 'Cacturne',
 'Swablu',
 'Altaria',
 'Zangoose',
 'Seviper',
 'Lunatone',
 'Solrock',
 'Barboach',
 'Whiscash',
 'Corphish',
 'Crawdaunt',
 'Baltoy',
 'Claydol',
 'Lileep',
 'Cradily',
 'Anorith',
 'Armaldo',
 'Feebas',
 'Milotic',
 'Castform',
 'Kecleon',
 'Shuppet',
 'Banette',
 'Duskull',
 'Dusclops',
 'Tropius',
 'Chimecho',
 'Absol',
 'Wynaut',
 'Snorunt',
 'Glalie',
 'Spheal',
 'Sealeo',
 'Walrein',
 'Clamperl',
 'Huntail',
 'Gorebyss',
 'Relicanth',
 'Luvdisc',
 'Bagon',
 'Shelgon',
 'Salamence',
 'Beldum',
 'Metang',
 'Metagross',
 'Regirock',
 'Regice',
 'Registeel',
 'Latias',
 'Latios',
 'Kyogre',
 'Groudon',
 'Rayquaza',
 'Jirachi',
 'Deoxys',
 'Turtwig',
 'Grotle',
 'Torterra',
 'Chimchar',
 'Monferno',
 'Infernape',
 'Piplup',
 'Prinplup',
 'Empoleon',
 'Starly',
 'Staravia',
 'Staraptor',
 'Bidoof',
 'Bibarel',
 'Kricketot',
 'Kricketune',
 'Shinx',
 'Luxio',
 'Luxray',
 'Budew',
 'Roserade',
 'Cranidos',
 'Rampardos',
 'Shieldon',
 'Bastiodon',
 'Burmy',
 'Wormadam',
 'Mothim',
 'Combee',
 'Vespiquen',
 'Pachirisu',
 'Buizel',
 'Floatzel',
 'Cherubi',
 'Cherrim',
 'Shellos',
 'Gastrodon',
 'Ambipom',
 'Drifloon',
 'Drifblim',
 'Buneary',
 'Lopunny',
 'Mismagius',
 'Honchkrow',
 'Glameow',
 'Purugly',
 'Chingling',
 'Stunky',
 'Skuntank',
 'Bronzor',
 'Bronzong',
 'Bonsly',
 'Mime Jr.',
 'Happiny',
 'Chatot',
 'Spiritomb',
 'Gible',
 'Gabite',
 'Garchomp',
 'Munchlax',
 'Riolu',
 'Lucario',
 'Hippopotas',
 'Hippowdon',
 'Skorupi',
 'Drapion',
 'Croagunk',
 'Toxicroak',
 'Carnivine',
 'Finneon',
 'Lumineon',
 'Mantyke',
 'Snover',
 'Abomasnow',
 'Weavile',
 'Magnezone',
 'Lickilicky',
 'Rhyperior',
 'Tangrowth',
 'Electivire',
 'Magmortar',
 'Togekiss',
 'Yanmega',
 'Leafeon',
 'Glaceon',
 'Gliscor',
 'Mamoswine',
 'Porygon-Z',
 'Gallade',
 'Probopass',
 'Dusknoir',
 'Froslass',
 'Rotom',
 'Uxie',
 'Mesprit',
 'Azelf',
 'Dialga',
 'Palkia',
 'Heatran',
 'Regigigas',
 'Giratina',
 'Cresselia',
 'Phione',
 'Manaphy',
 'Darkrai',
 'Shaymin',
 'Arceus',
 'Victini',
 'Snivy',
 'Servine',
 'Serperior',
 'Tepig',
 'Pignite',
 'Emboar',
 'Oshawott',
 'Dewott',
 'Samurott',
 'Patrat',
 'Watchog',
 'Lillipup',
 'Herdier',
 'Stoutland',
 'Purrloin',
 'Liepard',
 'Pansage',
 'Simisage',
 'Pansear',
 'Simisear',
 'Panpour',
 'Simipour',
 'Munna',
 'Musharna',
 'Pidove',
 'Tranquill',
 'Unfezant',
 'Blitzle',
 'Zebstrika',
 'Roggenrola',
 'Boldore',
 'Gigalith',
 'Woobat',
 'Swoobat',
 'Drilbur',
 'Excadrill',
 'Audino',
 'Timburr',
 'Gurdurr',
 'Conkeldurr',
 'Tympole',
 'Palpitoad',
 'Seismitoad',
 'Throh',
 'Sawk',
 'Sewaddle',
 'Swadloon',
 'Leavanny',
 'Venipede',
 'Whirlipede',
 'Scolipede',
 'Cottonee',
 'Whimsicott',
 'Petilil',
 'Lilligant',
 'Basculin',
 'Sandile',
 'Krokorok',
 'Krookodile',
 'Darumaka',
 'Darmanitan',
 'Maractus',
 'Dwebble',
 'Crustle',
 'Scraggy',
 'Scrafty',
 'Sigilyph',
 'Yamask',
 'Cofagrigus',
 'Tirtouga',
 'Carracosta',
 'Archen',
 'Archeops',
 'Trubbish',
 'Garbodor',
 'Zorua',
 'Zoroark',
 'Minccino',
 'Cinccino',
 'Gothita',
 'Gothorita',
 'Gothitelle',
 'Solosis',
 'Duosion',
 'Reuniclus',
 'Ducklett',
 'Swanna',
 'Vanillite',
 'Vanillish',
 'Vanilluxe',
 'Deerling',
 'Sawsbuck',
 'Emolga',
 'Karrablast',
 'Escavalier',
 'Foongus',
 'Amoonguss',
 'Frillish',
 'Jellicent',
 'Alomomola',
 'Joltik',
 'Galvantula',
 'Ferroseed',
 'Ferrothorn',
 'Klink',
 'Klang',
 'Klinklang',
 'Tynamo',
 'Eelektrik',
 'Eelektross',
 'Elgyem',
 'Beheeyem',
 'Litwick',
 'Lampent',
 'Chandelure',
 'Axew',
 'Fraxure',
 'Haxorus',
 'Cubchoo',
 'Beartic',
 'Cryogonal',
 'Shelmet',
 'Accelgor',
 'Stunfisk',
 'Mienfoo',
 'Mienshao',
 'Druddigon',
 'Golett',
 'Golurk',
 'Pawniard',
 'Bisharp',
 'Bouffalant',
 'Rufflet',
 'Braviary',
 'Vullaby',
 'Mandibuzz',
 'Heatmor',
 'Durant',
 'Deino',
 'Zweilous',
 'Hydreigon',
 'Larvesta',
 'Volcarona',
 'Cobalion',
 'Terrakion',
 'Virizion',
 'Tornadus',
 'Thundurus',
 'Reshiram',
 'Zekrom',
 'Landorus',
 'Kyurem',
 'Keldeo',
 'Meloetta',
 'Genesect',
 'Chespin',
 'Quilladin',
 'Chesnaught',
 'Fennekin',
 'Braixen',
 'Delphox',
 'Froakie',
 'Frogadier',
 'Greninja',
 'Bunnelby',
 'Diggersby',
 'Fletchling',
 'Fletchinder',
 'Talonflame',
 'Scatterbug',
 'Spewpa',
 'Vivillon',
 'Litleo',
 'Pyroar',
 'Flabébé',
 'Floette',
 'Florges',
 'Skiddo',
 'Gogoat',
 'Pancham',
 'Pangoro',
 'Furfrou',
 'Espurr',
 'Meowstic',
 'Honedge',
 'Doublade',
 'Aegislash',
 'Spritzee',
 'Aromatisse',
 'Swirlix',
 'Slurpuff',
 'Inkay',
 'Malamar',
 'Binacle',
 'Barbaracle',
 'Skrelp',
 'Dragalge',
 'Clauncher',
 'Clawitzer',
 'Helioptile',
 'Heliolisk',
 'Tyrunt',
 'Tyrantrum',
 'Amaura',
 'Aurorus',
 'Sylveon',
 'Hawlucha',
 'Dedenne',
 'Carbink',
 'Goomy',
 'Sliggoo',
 'Goodra',
 'Klefki',
 'Phantump',
 'Trevenant',
 'Pumpkaboo',
 'Gourgeist',
 'Bergmite',
 'Avalugg',
 'Noibat',
 'Noivern',
 'Xerneas',
 'Yveltal',
 'Zygarde',
 'Diancie',
 'Hoopa',
 'Volcanion']

# when you give a series , it's going to turn into a dictionary , where index lables are going to be keys and values 
dict(google)

{0: 50.12,
 1: 54.1,
 2: 54.65,
 3: 52.38,
 4: 52.95,
 5: 53.9,
 6: 53.02,
 7: 50.95,
 8: 51.13,
 9: 50.07,
 10: 50.7,
 11: 49.95,
 12: 50.74,
 13: 51.1,
 14: 51.1,
 15: 52.61,
 16: 53.7,
 17: 55.69,
 18: 55.94,
 19: 56.93,
 20: 58.69,
 21: 59.62,
 22: 58.86,
 23: 59.13,
 24: 60.35,
 25: 59.86,
 26: 59.07,
 27: 63.37,
 28: 65.47,
 29: 64.74,
 30: 66.22,
 31: 67.46,
 32: 69.12,
 33: 68.47,
 34: 69.36,
 35: 68.8,
 36: 67.56,
 37: 68.63,
 38: 70.38,
 39: 70.93,
 40: 71.98,
 41: 74.51,
 42: 73.9,
 43: 70.17,
 44: 74.62,
 45: 86.13,
 46: 93.61,
 47: 90.81,
 48: 92.89,
 49: 96.55,
 50: 95.22,
 51: 97.92,
 52: 97.34,
 53: 95.74,
 54: 92.26,
 55: 84.59,
 56: 86.19,
 57: 84.27,
 58: 83.85,
 59: 91.42,
 60: 90.91,
 61: 92.34,
 62: 86.19,
 63: 86.16,
 64: 83.69,
 65: 84.62,
 66: 82.47,
 67: 83.68,
 68: 87.29,
 69: 89.61,
 70: 90.43,
 71: 90.9,
 72: 89.89,
 73: 89.61,
 74: 90.11,
 75: 88.06,
 76: 85.63,
 77: 84.91,
 78: 86.63,
 79: 85.74,
 80: 85.14,
 81: 89.26,
 82: 89.8,
 83: 88.15,
 84: 89.95,
 85: 92.42,
 86: 91.78,
 87: 93.06,
 88: 93.86,
 89: 95.86,
 90: 96.28,
 91: 96.35,
 92: 98.7,
 93: 96.3,
 94: 101.25,
 95: 97.15,
 96: 96.66,
 97: 94.18,
 98: 96.83,
 99: 97.43,
 100: 96.67,
 101: 97.59,
 102: 97.57,
 103: 99.89,
 104: 101.85,
 105: 98.55,
 106: 96.86,
 107: 94.05,
 108: 90.27,
 109: 88.47,
 110: 94.53,
 111: 93.95,
 112: 95.07,
 113: 97.71,
 114: 95.85,
 115: 102.88,
 116: 105.32,
 117: 102.08,
 118: 97.92,
 119: 99.22,
 120: 95.69,
 121: 93.9,
 122: 93.61,
 123: 96.4,
 124: 97.52,
 125: 99.11,
 126: 98.85,
 127: 98.88,
 128: 95.59,
 129: 96.88,
 130: 94.35,
 131: 92.84,
 132: 93.9,
 133: 92.94,
 134: 92.5,
 135: 93.41,
 136: 92.86,
 137: 94.31,
 138: 92.51,
 139: 90.58,
 140: 89.9,
 141: 88.81,
 142: 87.41,
 143: 89.22,
 144: 87.71,
 145: 89.56,
 146: 89.93,
 147: 90.35,
 148: 89.21,
 149: 89.4,
 150: 89.54,
 151: 90.62,
 152: 89.7,
 153: 90.13,
 154: 90.16,
 155: 89.93,
 156: 92.55,
 157: 94.19,
 158: 94.52,
 159: 96.78,
 160: 95.93,
 161: 96.52,
 162: 96.88,
 163: 96.37,
 164: 95.63,
 165: 92.41,
 166: 93.39,
 167: 95.6,
 168: 98.95,
 169: 102.01,
 170: 107.8,
 171: 111.65,
 172: 109.27,
 173: 109.78,
 174: 109.62,
 175: 109.89,
 176: 111.03,
 177: 112.98,
 178: 114.14,
 179: 113.38,
 180: 113.9,
 181: 112.9,
 182: 113.79,
 183: 115.53,
 184: 114.25,
 185: 114.51,
 186: 115.41,
 187: 116.45,
 188: 119.46,
 189: 119.47,
 190: 120.68,
 191: 127.6,
 192: 127.87,
 193: 130.27,
 194: 129.47,
 195: 132.87,
 196: 138.5,
 197: 143.86,
 198: 143.81,
 199: 139.99,
 200: 145.32,
 201: 146.41,
 202: 139.64,
 203: 143.01,
 204: 141.11,
 205: 141.23,
 206: 139.04,
 207: 137.26,
 208: 138.58,
 209: 140.0,
 210: 143.21,
 211: 143.78,
 212: 144.51,
 213: 144.71,
 214: 148.48,
 215: 151.9,
 216: 150.85,
 217: 146.21,
 218: 146.93,
 219: 145.48,
 220: 147.71,
 221: 145.62,
 222: 147.62,
 223: 147.97,
 224: 146.53,
 225: 145.75,
 226: 149.28,
 227: 150.29,
 228: 150.44,
 229: 149.62,
 230: 154.8,
 231: 155.84,
 232: 156.81,
 233: 151.05,
 234: 147.78,
 235: 147.9,
 236: 148.32,
 237: 146.6,
 238: 143.74,
 239: 145.66,
 240: 149.45,
 241: 148.5,
 242: 148.72,
 243: 146.03,
 244: 145.48,
 245: 145.64,
 246: 142.7,
 247: 141.88,
 248: 144.72,
 249: 141.86,
 250: 142.68,
 251: 142.41,
 252: 139.86,
 253: 139.86,
 254: 136.87,
 255: 139.65,
 256: 141.14,
 257: 141.15,
 258: 141.65,
 259: 144.08,
 260: 143.49,
 261: 142.86,
 262: 142.98,
 263: 144.08,
 264: 143.41,
 265: 147.29,
 266: 147.55,
 267: 149.4,
 268: 154.72,
 269: 155.68,
 270: 151.35,
 271: 151.16,
 272: 149.95,
 273: 151.74,
 274: 153.8,
 275: 155.79,
 276: 155.53,
 277: 157.52,
 278: 156.98,
 279: 156.81,
 280: 152.85,
 281: 154.66,
 282: 158.07,
 283: 159.18,
 284: 155.34,
 285: 155.2,
 286: 156.22,
 287: 156.34,
 288: 155.17,
 289: 152.9,
 290: 150.33,
 291: 148.57,
 292: 147.92,
 293: 152.35,
 294: 151.49,
 295: 154.2,
 296: 151.45,
 297: 169.78,
 298: 174.15,
 299: 173.28,
 300: 177.54,
 301: 176.35,
 302: 178.91,
 303: 185.88,
 304: 189.5,
 305: 189.65,
 306: 192.78,
 307: 195.02,
 308: 197.32,
 309: 194.76,
 310: 189.39,
 311: 195.35,
 312: 195.0,
 313: 198.29,
 314: 196.2,
 315: 198.88,
 316: 201.52,
 317: 199.9,
 318: 204.48,
 319: 208.03,
 320: 211.22,
 321: 214.1,
 322: 211.53,
 323: 201.57,
 324: 202.25,
 325: 206.84,
 326: 208.64,
 327: 202.72,
 328: 202.07,
 329: 201.91,
 330: 205.12,
 331: 204.4,
 332: 206.1,
 333: 208.54,
 334: 209.27,
 335: 211.05,
 336: 214.86,
 337: 212.09,
 338: 214.66,
 339: 212.95,
 340: 215.8,
 341: 215.25,
 342: 212.11,
 343: 213.13,
 344: 209.86,
 345: 207.22,
 346: 217.4,
 347: 222.4,
 348: 225.39,
 349: 232.6,
 350: 233.22,
 351: 234.65,
 352: 235.58,
 353: 231.58,
 354: 232.89,
 355: 233.32,
 356: 222.23,
 357: 218.0,
 358: 199.53,
 359: 213.54,
 360: 221.29,
 361: 216.28,
 362: 216.92,
 363: 216.53,
 364: 213.2,
 365: 216.11,
 366: 200.69,
 367: 197.82,
 368: 190.59,
 369: 192.36,
 370: 183.78,
 371: 184.36,
 372: 179.21,
 373: 181.12,
 374: 172.68,
 375: 171.49,
 376: 171.02,
 377: 183.05,
 378: 184.19,
 379: 183.11,
 380: 182.56,
 381: 188.85,
 382: 188.51,
 383: 194.99,
 384: 181.13,
 385: 182.22,
 386: 188.04,
 387: 188.9,
 388: 183.87,
 389: 182.04,
 390: 176.76,
 391: 171.33,
 392: 168.58,
 393: 168.36,
 394: 175.4,
 395: 172.08,
 396: 169.22,
 397: 169.73,
 398: 173.92,
 399: 169.79,
 400: 169.94,
 401: 170.77,
 402: 182.72,
 403: 184.66,
 404: 188.41,
 405: 197.29,
 406: 194.03,
 407: 194.8,
 408: 194.66,
 409: 201.97,
 410: 203.79,
 411: 205.38,
 412: 202.88,
 413: 207.98,
 414: 204.63,
 415: 204.27,
 416: 200.88,
 417: 203.21,
 418: 201.92,
 419: 205.04,
 420: 207.29,
 421: 218.33,
 422: 220.03,
 423: 213.37,
 424: 212.77,
 425: 209.8,
 426: 208.76,
 427: 199.25,
 428: 197.2,
 429: 196.89,
 430: 197.18,
 431: 196.95,
 432: 197.19,
 433: 204.2,
 434: 201.29,
 435: 193.31,
 436: 186.88,
 437: 187.91,
 438: 185.46,
 439: 187.06,
 440: 185.31,
 441: 184.82,
 442: 185.29,
 443: 187.6,
 444: 190.43,
 445: 191.3,
 446: 190.48,
 447: 185.78,
 448: 185.72,
 449: 191.12,
 450: 189.53,
 451: 187.03,
 452: 194.8,
 453: 193.06,
 454: 196.45,
 455: 193.09,
 456: 190.58,
 457: 193.07,
 458: 192.0,
 459: 195.3,
 460: 195.15,
 461: 193.88,
 462: 193.39,
 463: 200.86,
 464: 199.78,
 465: 202.23,
 466: 201.91,
 467: 200.96,
 468: 202.85,
 469: 208.7,
 470: 209.46,
 471: 211.39,
 472: 210.52,
 473: 211.38,
 474: 210.01,
 475: 208.89,
 476: 212.07,
 477: 208.42,
 478: 204.21,
 479: 201.55,
 480: 203.74,
 481: 201.32,
 482: 199.3,
 483: 193.37,
 484: 194.86,
 485: 195.25,
 486: 194.49,
 487: 192.56,
 488: 191.01,
 489: 193.87,
 490: 193.11,
 491: 187.57,
 492: 183.43,
 493: 187.51,
 494: 186.74,
 495: 188.79,
 496: 190.31,
 497: 188.28,
 498: 186.91,
 499: 184.07,
 500: 184.53,
 501: 190.29,
 502: 193.67,
 503: 192.71,
 504: 191.49,
 505: 188.46,
 506: 188.96,
 507: 186.53,
 508: 186.68,
 509: 186.44,
 510: 190.28,
 511: 189.29,
 512: 190.18,
 513: 189.08,
 514: 189.11,
 515: 191.99,
 516: 189.88,
 517: 189.06,
 518: 188.74,
 519: 191.85,
 520: 195.75,
 521: 203.08,
 522: 201.79,
 523: 204.74,
 524: 207.14,
 525: 201.7,
 526: 198.3,
 527: 203.22,
 528: 201.69,
 529: 201.79,
 530: 203.23,
 531: 201.26,
 532: 201.59,
 533: 200.75,
 534: 200.52,
 535: 201.82,
 536: 207.64,
 537: 205.7,
 538: 210.04,
 539: 214.29,
 540: 213.11,
 541: 213.04,
 542: 213.51,
 543: 213.44,
 544: 210.66,
 545: 210.11,
 546: 209.44,
 547: 212.82,
 548: 229.61,
 549: 240.15,
 550: 236.42,
 551: 243.06,
 552: 242.31,
 553: 237.36,
 554: 238.05,
 555: 237.96,
 556: 233.52,
 557: 234.72,
 558: 235.66,
 559: 238.24,
 560: 236.05,
 561: 237.26,
 562: 236.08,
 563: 236.54,
 564: 240.27,
 565: 244.41,
 566: 245.72,
 567: 247.7,
 568: 249.15,
 569: 247.28,
 570: 254.57,
 571: 253.75,
 572: 252.2,
 573: 242.13,
 574: 244.51,
 575: 242.08,
 576: 242.16,
 577: 240.16,
 578: 242.18,
 579: 243.26,
 580: 244.11,
 581: 241.08,
 582: 241.81,
 583: 241.72,
 584: 240.65,
 585: 239.26,
 586: 240.82,
 587: 239.91,
 588: 231.17,
 589: 234.08,
 590: 231.22,
 591: 227.87,
 592: 227.56,
 593: 228.54,
 594: 233.78,
 595: 231.05,
 596: 230.01,
 597: 233.56,
 598: 241.39,
 599: 243.35,
 600: 241.55,
 601: 242.51,
 602: 244.49,
 603: 249.61,
 604: 252.25,
 605: 251.89,
 606: 248.39,
 607: 243.67,
 608: 244.63,
 609: 240.18,
 610: 239.29,
 611: 249.28,
 612: 243.8,
 613: 247.67,
 614: 245.99,
 615: 246.91,
 616: 250.5,
 617: 240.63,
 618: 240.51,
 619: 233.35,
 620: 235.5,
 621: 234.77,
 622: 235.28,
 623: 230.71,
 624: 228.92,
 625: 229.32,
 626: 232.73,
 627: 230.5,
 628: 234.74,
 629: 235.81,
 630: 237.69,
 631: 237.69,
 632: 235.07,
 633: 232.23,
 634: 224.16,
 635: 224.5,
 636: 223.89,
 637: 219.12,
 638: 220.25,
 639: 228.55,
 640: 227.59,
 641: 227.13,
 642: 226.25,
 643: 227.15,
 644: 221.29,
 645: 223.78,
 646: 222.87,
 647: 220.2,
 648: 223.39,
 649: 222.42,
 650: 228.05,
 651: 230.79,
 652: 230.68,
 653: 232.27,
 654: 231.58,
 655: 230.71,
 656: 230.23,
 657: 228.85,
 658: 229.04,
 659: 236.06,
 660: 235.27,
 661: 235.52,
 662: 233.87,
 663: 233.02,
 664: 232.03,
 665: 233.46,
 666: 232.91,
 667: 236.9,
 668: 236.16,
 669: 237.77,
 670: 235.59,
 671: 241.0,
 672: 239.3,
 673: 238.53,
 674: 238.76,
 675: 240.35,
 676: 239.27,
 677: 235.45,
 678: 234.27,
 679: 232.66,
 680: 236.38,
 681: 235.32,
 682: 233.4,
 683: 233.17,
 684: 234.39,
 685: 230.5,
 686: 233.14,
 687: 230.66,
 688: 228.77,
 689: 236.07,
 690: 235.24,
 691: 234.92,
 692: 235.06,
 693: 237.69,
 694: 236.75,
 695: 236.93,
 696: 241.52,
 697: 243.31,
 698: 249.05,
 699: 248.71,
 700: 249.95,
 701: 253.28,
 702: 259.16,
 703: 258.87,
 704: 257.27,
 705: 257.49,
 706: 255.41,
 707: 252.13,
 708: 252.37,
 709: 251.17,
 710: 252.69,
 711: 257.34,
 712: 256.9,
 713: 254.73,
 714: 256.8,
 715: 262.23,
 716: 263.45,
 717: 264.86,
 718: 262.88,
 719: 262.24,
 720: 261.09,
 721: 264.92,
 722: 266.9,
 723: 270.54,
 724: 269.43,
 725: 271.01,
 726: 271.4,
 727: 271.96,
 728: 272.39,
 729: 275.8,
 730: 276.22,
 731: 277.22,
 732: 274.48,
 733: 274.02,
 734: 259.8,
 735: 256.0,
 736: 256.74,
 737: 254.63,
 738: 253.75,
 739: 255.69,
 740: 257.8,
 741: 254.74,
 742: 256.21,
 743: 255.25,
 744: 251.25,
 745: 254.74,
 746: 257.75,
 747: 262.63,
 748: 257.11,
 749: 257.62,
 750: 257.49,
 751: 254.05,
 752: 248.53,
 753: 245.51,
 754: 249.77,
 755: 248.71,
 756: 253.05,
 757: 256.12,
 758: 255.84,
 759: 257.24,
 760: 256.37,
 761: 252.95,
 762: 256.18,
 763: 255.44,
 764: 257.37,
 765: 262.31,
 766: 263.64,
 767: 261.5,
 768: 259.42,
 769: 256.98,
 770: 260.4,
 771: 261.06,
 772: 262.13,
 773: 264.11,
 774: 262.39,
 775: 267.37,
 776: 273.15,
 777: 276.14,
 778: 279.77,
 779: 283.73,
 780: 284.22,
 781: 283.8,
 782: 283.47,
 783: 283.35,
 784: 290.98,
 785: 291.9,
 786: 291.72,
 787: 289.23,
 788: 296.73,
 789: 304.51,
 790: 307.28,
 791: 312.38,
 792: 310.69,
 793: 318.38,
 794: 309.74,
 795: 307.69,
 796: 316.42,
 797: 319.49,
 798: 322.03,
 799: 325.05,
 800: 337.55,
 801: 337.57,
 802: 333.92,
 803: 336.96,
 804: 339.28,
 805: 347.04,
 806: 353.15,
 807: 351.25,
 808: 355.27,
 809: 362.46,
 810: 370.52,
 811: 366.1,
 812: 346.57,
 813: 331.65,
 814: 315.72,
 815: 329.94,
 816: 320.52,
 817: 314.51,
 818: 316.5,
 819: 312.61,
 820: 323.95,
 821: 329.93,
 822: 338.01,
 823: 332.7,
 824: 336.45,
 825: 345.78,
 826: 348.15,
 827: 346.15,
 828: 340.42,
 829: 341.74,
 830: 348.91,
 831: 357.27,
 832: 357.08,
 833: 358.85,
 834: 349.25,
 835: 349.33,
 836: 346.68,
 837: 344.64,
 838: 334.28,
 839: 336.34,
 840: 338.35,
 841: 344.5,
 842: 348.0,
 843: 350.01,
 844: 355.06,
 845: 350.02,
 846: 350.91,
 847: 345.39,
 848: 342.25,
 849: 342.32,
 850: 328.17,
 851: 324.3,
 852: 315.52,
 853: 326.27,
 854: 323.04,
 855: 318.81,
 856: 326.58,
 857: 318.51,
 858: 307.67,
 859: 300.09,
 860: 299.82,
 861: 291.88,
 862: 274.04,
 863: 286.96,
 864: 282.92,
 865: 277.71,
 866: 274.98,
 867: 273.86,
 868: 281.87,
 869: 257.69,
 870: 247.47,
 871: 253.15,
 872: 250.6,
 873: 252.22,
 874: 258.09,
 875: 260.32,
 876: 258.79,
 877: 267.04,
 878: 265.86,
 879: 264.56,
 880: 254.22,
 881: 254.25,
 882: 251.18,
 883: 253.65,
 884: 242.98,
 885: 231.86,
 886: 236.19,
 887: 237.46,
 888: 235.35,
 889: 228.28,
 890: 222.08,
 891: 223.63,
 892: 216.13,
 893: 216.46,
 894: 206.6,
 895: 219.7,
 896: 219.87,
 897: 221.28,
 898: 218.74,
 899: 209.73,
 900: 219.36,
 901: 215.78,
 902: 216.56,
 903: 230.05,
 904: 225.16,
 905: 228.87,
 906: 221.82,
 907: 218.82,
 908: 220.01,
 909: 232.62,
 910: 232.62,
 911: 227.33,
 912: 235.31,
 913: 238.17,
 914: 233.67,
 915: 231.86,
 916: 234.3,
 917: 228.5,
 918: 225.6,
 919: 223.2,
 920: 227.29,
 921: 224.55,
 922: 269.44,
 923: 268.63,
 924: 277.22,
 925: 272.97,
 926: 271.25,
 927: 271.76,
 928: 275.78,
 929: 278.96,
 930: 286.86,
 931: 296.24,
 932: 290.35,
 933: 297.15,
 934: 292.89,
 935: 289.21,
 936: 291.21,
 937: 286.3,
 938: 292.18,
 939: 291.21,
 940: 287.86,
 941: 290.21,
 942: 289.74,
 943: 288.47,
 944: 289.01,
 945: 274.72,
 946: 274.46,
 947: 272.04,
 948: 280.17,
 949: 283.84,
 950: 291.21,
 951: 292.61,
 952: 287.21,
 953: 283.37,
 954: 285.82,
 955: 292.86,
 956: 283.22,
 957: 278.66,
 958: 276.81,
 959: 272.33,
 960: 276.2,
 961: 285.47,
 962: 286.12,
 963: 284.45,
 964: 280.91,
 965: 279.82,
 966: 272.94,
 967: 272.33,
 968: 270.88,
 969: 275.22,
 970: 264.15,
 971: 263.77,
 972: 262.95,
 973: 267.1,
 974: 263.26,
 975: 268.23,
 976: 271.68,
 977: 276.99,
 978: 270.5,
 979: 270.02,
 980: 266.63,
 981: 260.55,
 982: 257.79,
 983: 267.53,
 984: 266.45,
 985: 240.42,
 986: 234.17,
 987: 238.32,
 988: 244.37,
 989: 237.57,
 990: 245.74,
 991: 238.32,
 992: 241.31,
 993: 241.11,
 994: 236.64,
 995: 233.7,
 996: 231.27,
 997: 239.69,
 998: 242.93,
 999: 239.32,
 ...}

# if you give a series of strings like pokemon to the built-in max() ,it's actually going to return the last value when the series is sorted alphabetically

max(pokeman)

'Type'

min(pokemon)

'Abomasnow'

max(google)

782.22

min(google)

49.95

More Series Attributes

pokemon.values

array(['Bulbasaur', 'Ivysaur', 'Venusaur', 'Charmander', 'Charmeleon',
       'Charizard', 'Squirtle', 'Wartortle', 'Blastoise', 'Caterpie',
       'Metapod', 'Butterfree', 'Weedle', 'Kakuna', 'Beedrill', 'Pidgey',
       'Pidgeotto', 'Pidgeot', 'Rattata', 'Raticate', 'Spearow', 'Fearow',
       'Ekans', 'Arbok', 'Pikachu', 'Raichu', 'Sandshrew', 'Sandslash',
       'Nidoran', 'Nidorina', 'Nidoqueen', 'Nidoran♂', 'Nidorino',
       'Nidoking', 'Clefairy', 'Clefable', 'Vulpix', 'Ninetales',
       'Jigglypuff', 'Wigglytuff', 'Zubat', 'Golbat', 'Oddish', 'Gloom',
       'Vileplume', 'Paras', 'Parasect', 'Venonat', 'Venomoth', 'Diglett',
       'Dugtrio', 'Meowth', 'Persian', 'Psyduck', 'Golduck', 'Mankey',
       'Primeape', 'Growlithe', 'Arcanine', 'Poliwag', 'Poliwhirl',
       'Poliwrath', 'Abra', 'Kadabra', 'Alakazam', 'Machop', 'Machoke',
       'Machamp', 'Bellsprout', 'Weepinbell', 'Victreebel', 'Tentacool',
       'Tentacruel', 'Geodude', 'Graveler', 'Golem', 'Ponyta', 'Rapidash',
       'Slowpoke', 'Slowbro', 'Magnemite', 'Magneton', "Farfetch'd",
       'Doduo', 'Dodrio', 'Seel', 'Dewgong', 'Grimer', 'Muk', 'Shellder',
       'Cloyster', 'Gastly', 'Haunter', 'Gengar', 'Onix', 'Drowzee',
       'Hypno', 'Krabby', 'Kingler', 'Voltorb', 'Electrode', 'Exeggcute',
       'Exeggutor', 'Cubone', 'Marowak', 'Hitmonlee', 'Hitmonchan',
       'Lickitung', 'Koffing', 'Weezing', 'Rhyhorn', 'Rhydon', 'Chansey',
       'Tangela', 'Kangaskhan', 'Horsea', 'Seadra', 'Goldeen', 'Seaking',
       'Staryu', 'Starmie', 'Mr. Mime', 'Scyther', 'Jynx', 'Electabuzz',
       'Magmar', 'Pinsir', 'Tauros', 'Magikarp', 'Gyarados', 'Lapras',
       'Ditto', 'Eevee', 'Vaporeon', 'Jolteon', 'Flareon', 'Porygon',
       'Omanyte', 'Omastar', 'Kabuto', 'Kabutops', 'Aerodactyl',
       'Snorlax', 'Articuno', 'Zapdos', 'Moltres', 'Dratini', 'Dragonair',
       'Dragonite', 'Mewtwo', 'Mew', 'Chikorita', 'Bayleef', 'Meganium',
       'Cyndaquil', 'Quilava', 'Typhlosion', 'Totodile', 'Croconaw',
       'Feraligatr', 'Sentret', 'Furret', 'Hoothoot', 'Noctowl', 'Ledyba',
       'Ledian', 'Spinarak', 'Ariados', 'Crobat', 'Chinchou', 'Lanturn',
       'Pichu', 'Cleffa', 'Igglybuff', 'Togepi', 'Togetic', 'Natu',
       'Xatu', 'Mareep', 'Flaaffy', 'Ampharos', 'Bellossom', 'Marill',
       'Azumarill', 'Sudowoodo', 'Politoed', 'Hoppip', 'Skiploom',
       'Jumpluff', 'Aipom', 'Sunkern', 'Sunflora', 'Yanma', 'Wooper',
       'Quagsire', 'Espeon', 'Umbreon', 'Murkrow', 'Slowking',
       'Misdreavus', 'Unown', 'Wobbuffet', 'Girafarig', 'Pineco',
       'Forretress', 'Dunsparce', 'Gligar', 'Steelix', 'Snubbull',
       'Granbull', 'Qwilfish', 'Scizor', 'Shuckle', 'Heracross',
       'Sneasel', 'Teddiursa', 'Ursaring', 'Slugma', 'Magcargo', 'Swinub',
       'Piloswine', 'Corsola', 'Remoraid', 'Octillery', 'Delibird',
       'Mantine', 'Skarmory', 'Houndour', 'Houndoom', 'Kingdra', 'Phanpy',
       'Donphan', 'Porygon2', 'Stantler', 'Smeargle', 'Tyrogue',
       'Hitmontop', 'Smoochum', 'Elekid', 'Magby', 'Miltank', 'Blissey',
       'Raikou', 'Entei', 'Suicune', 'Larvitar', 'Pupitar', 'Tyranitar',
       'Lugia', 'Ho-oh', 'Celebi', 'Treecko', 'Grovyle', 'Sceptile',
       'Torchic', 'Combusken', 'Blaziken', 'Mudkip', 'Marshtomp',
       'Swampert', 'Poochyena', 'Mightyena', 'Zigzagoon', 'Linoone',
       'Wurmple', 'Silcoon', 'Beautifly', 'Cascoon', 'Dustox', 'Lotad',
       'Lombre', 'Ludicolo', 'Seedot', 'Nuzleaf', 'Shiftry', 'Taillow',
       'Swellow', 'Wingull', 'Pelipper', 'Ralts', 'Kirlia', 'Gardevoir',
       'Surskit', 'Masquerain', 'Shroomish', 'Breloom', 'Slakoth',
       'Vigoroth', 'Slaking', 'Nincada', 'Ninjask', 'Shedinja', 'Whismur',
       'Loudred', 'Exploud', 'Makuhita', 'Hariyama', 'Azurill',
       'Nosepass', 'Skitty', 'Delcatty', 'Sableye', 'Mawile', 'Aron',
       'Lairon', 'Aggron', 'Meditite', 'Medicham', 'Electrike',
       'Manectric', 'Plusle', 'Minun', 'Volbeat', 'Illumise', 'Roselia',
       'Gulpin', 'Swalot', 'Carvanha', 'Sharpedo', 'Wailmer', 'Wailord',
       'Numel', 'Camerupt', 'Torkoal', 'Spoink', 'Grumpig', 'Spinda',
       'Trapinch', 'Vibrava', 'Flygon', 'Cacnea', 'Cacturne', 'Swablu',
       'Altaria', 'Zangoose', 'Seviper', 'Lunatone', 'Solrock',
       'Barboach', 'Whiscash', 'Corphish', 'Crawdaunt', 'Baltoy',
       'Claydol', 'Lileep', 'Cradily', 'Anorith', 'Armaldo', 'Feebas',
       'Milotic', 'Castform', 'Kecleon', 'Shuppet', 'Banette', 'Duskull',
       'Dusclops', 'Tropius', 'Chimecho', 'Absol', 'Wynaut', 'Snorunt',
       'Glalie', 'Spheal', 'Sealeo', 'Walrein', 'Clamperl', 'Huntail',
       'Gorebyss', 'Relicanth', 'Luvdisc', 'Bagon', 'Shelgon',
       'Salamence', 'Beldum', 'Metang', 'Metagross', 'Regirock', 'Regice',
       'Registeel', 'Latias', 'Latios', 'Kyogre', 'Groudon', 'Rayquaza',
       'Jirachi', 'Deoxys', 'Turtwig', 'Grotle', 'Torterra', 'Chimchar',
       'Monferno', 'Infernape', 'Piplup', 'Prinplup', 'Empoleon',
       'Starly', 'Staravia', 'Staraptor', 'Bidoof', 'Bibarel',
       'Kricketot', 'Kricketune', 'Shinx', 'Luxio', 'Luxray', 'Budew',
       'Roserade', 'Cranidos', 'Rampardos', 'Shieldon', 'Bastiodon',
       'Burmy', 'Wormadam', 'Mothim', 'Combee', 'Vespiquen', 'Pachirisu',
       'Buizel', 'Floatzel', 'Cherubi', 'Cherrim', 'Shellos', 'Gastrodon',
       'Ambipom', 'Drifloon', 'Drifblim', 'Buneary', 'Lopunny',
       'Mismagius', 'Honchkrow', 'Glameow', 'Purugly', 'Chingling',
       'Stunky', 'Skuntank', 'Bronzor', 'Bronzong', 'Bonsly', 'Mime Jr.',
       'Happiny', 'Chatot', 'Spiritomb', 'Gible', 'Gabite', 'Garchomp',
       'Munchlax', 'Riolu', 'Lucario', 'Hippopotas', 'Hippowdon',
       'Skorupi', 'Drapion', 'Croagunk', 'Toxicroak', 'Carnivine',
       'Finneon', 'Lumineon', 'Mantyke', 'Snover', 'Abomasnow', 'Weavile',
       'Magnezone', 'Lickilicky', 'Rhyperior', 'Tangrowth', 'Electivire',
       'Magmortar', 'Togekiss', 'Yanmega', 'Leafeon', 'Glaceon',
       'Gliscor', 'Mamoswine', 'Porygon-Z', 'Gallade', 'Probopass',
       'Dusknoir', 'Froslass', 'Rotom', 'Uxie', 'Mesprit', 'Azelf',
       'Dialga', 'Palkia', 'Heatran', 'Regigigas', 'Giratina',
       'Cresselia', 'Phione', 'Manaphy', 'Darkrai', 'Shaymin', 'Arceus',
       'Victini', 'Snivy', 'Servine', 'Serperior', 'Tepig', 'Pignite',
       'Emboar', 'Oshawott', 'Dewott', 'Samurott', 'Patrat', 'Watchog',
       'Lillipup', 'Herdier', 'Stoutland', 'Purrloin', 'Liepard',
       'Pansage', 'Simisage', 'Pansear', 'Simisear', 'Panpour',
       'Simipour', 'Munna', 'Musharna', 'Pidove', 'Tranquill', 'Unfezant',
       'Blitzle', 'Zebstrika', 'Roggenrola', 'Boldore', 'Gigalith',
       'Woobat', 'Swoobat', 'Drilbur', 'Excadrill', 'Audino', 'Timburr',
       'Gurdurr', 'Conkeldurr', 'Tympole', 'Palpitoad', 'Seismitoad',
       'Throh', 'Sawk', 'Sewaddle', 'Swadloon', 'Leavanny', 'Venipede',
       'Whirlipede', 'Scolipede', 'Cottonee', 'Whimsicott', 'Petilil',
       'Lilligant', 'Basculin', 'Sandile', 'Krokorok', 'Krookodile',
       'Darumaka', 'Darmanitan', 'Maractus', 'Dwebble', 'Crustle',
       'Scraggy', 'Scrafty', 'Sigilyph', 'Yamask', 'Cofagrigus',
       'Tirtouga', 'Carracosta', 'Archen', 'Archeops', 'Trubbish',
       'Garbodor', 'Zorua', 'Zoroark', 'Minccino', 'Cinccino', 'Gothita',
       'Gothorita', 'Gothitelle', 'Solosis', 'Duosion', 'Reuniclus',
       'Ducklett', 'Swanna', 'Vanillite', 'Vanillish', 'Vanilluxe',
       'Deerling', 'Sawsbuck', 'Emolga', 'Karrablast', 'Escavalier',
       'Foongus', 'Amoonguss', 'Frillish', 'Jellicent', 'Alomomola',
       'Joltik', 'Galvantula', 'Ferroseed', 'Ferrothorn', 'Klink',
       'Klang', 'Klinklang', 'Tynamo', 'Eelektrik', 'Eelektross',
       'Elgyem', 'Beheeyem', 'Litwick', 'Lampent', 'Chandelure', 'Axew',
       'Fraxure', 'Haxorus', 'Cubchoo', 'Beartic', 'Cryogonal', 'Shelmet',
       'Accelgor', 'Stunfisk', 'Mienfoo', 'Mienshao', 'Druddigon',
       'Golett', 'Golurk', 'Pawniard', 'Bisharp', 'Bouffalant', 'Rufflet',
       'Braviary', 'Vullaby', 'Mandibuzz', 'Heatmor', 'Durant', 'Deino',
       'Zweilous', 'Hydreigon', 'Larvesta', 'Volcarona', 'Cobalion',
       'Terrakion', 'Virizion', 'Tornadus', 'Thundurus', 'Reshiram',
       'Zekrom', 'Landorus', 'Kyurem', 'Keldeo', 'Meloetta', 'Genesect',
       'Chespin', 'Quilladin', 'Chesnaught', 'Fennekin', 'Braixen',
       'Delphox', 'Froakie', 'Frogadier', 'Greninja', 'Bunnelby',
       'Diggersby', 'Fletchling', 'Fletchinder', 'Talonflame',
       'Scatterbug', 'Spewpa', 'Vivillon', 'Litleo', 'Pyroar', 'Flabébé',
       'Floette', 'Florges', 'Skiddo', 'Gogoat', 'Pancham', 'Pangoro',
       'Furfrou', 'Espurr', 'Meowstic', 'Honedge', 'Doublade',
       'Aegislash', 'Spritzee', 'Aromatisse', 'Swirlix', 'Slurpuff',
       'Inkay', 'Malamar', 'Binacle', 'Barbaracle', 'Skrelp', 'Dragalge',
       'Clauncher', 'Clawitzer', 'Helioptile', 'Heliolisk', 'Tyrunt',
       'Tyrantrum', 'Amaura', 'Aurorus', 'Sylveon', 'Hawlucha', 'Dedenne',
       'Carbink', 'Goomy', 'Sliggoo', 'Goodra', 'Klefki', 'Phantump',
       'Trevenant', 'Pumpkaboo', 'Gourgeist', 'Bergmite', 'Avalugg',
       'Noibat', 'Noivern', 'Xerneas', 'Yveltal', 'Zygarde', 'Diancie',
       'Hoopa', 'Volcanion'], dtype=object)

google.values

array([ 50.12,  54.1 ,  54.65, ..., 773.18, 771.61, 782.22])

pokeman.index
google.index

RangeIndex(start=0, stop=3012, step=1)

pokemon.dtype

dtype('O')

# is_unique attribute , it returns the boolean value either True or False , it will look for duplicte values.
# if the series has duplicate values it returns the 'True'  or it returns 'False'

pokemon.is_unique

True

google.is_unique

False

# ndim is for to find number of dimensions. Series is always a one dimensional data 
pokemon.ndim

1

pokemon.shape    # it will show the shape of the series like no of rows and cloumns 

(721,)

google.shape

(3012,)

pokemon.size  #  it will show no of rows  , this attribute will count the null values too

721

pokemon.name  # name of the series , you can modify the name of the  existing series like pokemon.name=" monsters"

'Pokemon'

Built-In Methods in Pandas series Objects

# this will give us when are dealing with series of strings. basically it's brand new series, where values are going to be alphabatical order
# we sorted this series based  values , so index might be messed 
# this sort_values() method return the brand new series object, and it will come up with own set of methods and attributes
 # we can countinue to calling new methods and attributes on this series, this is calling method chianing. because it will create sequential cain of methods
    
pokemon.sort_values() 

pokemon.sort_values().head() # we can call head() method on the newly created series 

459    Abomasnow
62          Abra
358        Absol
616     Accelgor
680    Aegislash
Name: Pokemon, dtype: object

pokemon.sort_values(ascending= True)

pokemon.sort_values(ascending= False).tail()

680    Aegislash
616     Accelgor
358        Absol
62          Abra
459    Abomasnow
Name: Pokemon, dtype: object

google.sort_values(ascending= True)

google.sort_values(ascending = False).head(1)

3011    782.22
Name: Stock Price, dtype: float64

google.head(1)

0    50.12
Name: Stock Price, dtype: float64

# The inplace Prameter

google.head(3)

0    50.12
1    54.10
2    54.65
Name: Stock Price, dtype: float64

# It's overidden the google variable with sorted values series data
google = google.sort_values()

google

11       49.95
9        50.07
0        50.12
10       50.70
12       50.74
7        50.95
14       51.10
13       51.10
8        51.13
3        52.38
15       52.61
4        52.95
6        53.02
16       53.70
5        53.90
1        54.10
2        54.65
17       55.69
18       55.94
19       56.93
20       58.69
22       58.86
26       59.07
23       59.13
21       59.62
25       59.86
24       60.35
27       63.37
29       64.74
28       65.47
         ...  
2921    750.53
2846    751.61
2931    751.72
2881    752.00
2842    752.54
2936    752.67
2932    753.20
2935    753.93
2835    755.98
2834    756.60
2851    758.09
2861    758.88
2933    759.00
2937    759.14
2845    762.37
2841    762.38
2858    762.51
2844    763.25
2882    764.65
2934    766.61
2843    766.81
2840    767.04
3006    768.79
2860    771.00
3008    771.07
3010    771.61
3007    772.88
3009    773.18
2859    776.60
3011    782.22
Name: Stock Price, Length: 3012, dtype: float64

google.head(3)

11    49.95
9     50.07
0     50.12
Name: Stock Price, dtype: float64

google.sort_values(ascending= False, inplace = False)

3011    782.22
2859    776.60
3009    773.18
3007    772.88
3010    771.61
3008    771.07
2860    771.00
3006    768.79
2840    767.04
2843    766.81
2934    766.61
2882    764.65
2844    763.25
2858    762.51
2841    762.38
2845    762.37
2937    759.14
2933    759.00
2861    758.88
2851    758.09
2834    756.60
2835    755.98
2935    753.93
2932    753.20
2936    752.67
2842    752.54
2881    752.00
2931    751.72
2846    751.61
2921    750.53
         ...  
28       65.47
29       64.74
27       63.37
24       60.35
25       59.86
21       59.62
23       59.13
26       59.07
22       58.86
20       58.69
19       56.93
18       55.94
17       55.69
2        54.65
1        54.10
5        53.90
16       53.70
6        53.02
4        52.95
15       52.61
3        52.38
8        51.13
13       51.10
14       51.10
7        50.95
12       50.74
10       50.70
0        50.12
9        50.07
11       49.95
Name: Stock Price, Length: 3012, dtype: float64

google.head(3)

11    49.95
9     50.07
0     50.12
Name: Stock Price, dtype: float64

sort_index()

pokemon.sort_values(ascending = False, inplace = True)

pokemon.head(3)

717     Zygarde
633    Zweilous
40        Zubat
Name: Pokemon, dtype: object

pokemon.sort_index(ascending = True, inplace = True)

pokemon.head(3)

0    Bulbasaur
1      Ivysaur
2     Venusaur
Name: Pokemon, dtype: object

in keyword

3 in[1,2,3,4,5,6]

True

pokemon.head(3)

0    Bulbasaur
1      Ivysaur
2     Venusaur
Name: Pokemon, dtype: object

"Bubasaur" in pokemon

100 in pokemon.index

True

100 in pokemon.index

True

pokemon.values

array(['Bulbasaur', 'Ivysaur', 'Venusaur', 'Charmander', 'Charmeleon',
       'Charizard', 'Squirtle', 'Wartortle', 'Blastoise', 'Caterpie',
       'Metapod', 'Butterfree', 'Weedle', 'Kakuna', 'Beedrill', 'Pidgey',
       'Pidgeotto', 'Pidgeot', 'Rattata', 'Raticate', 'Spearow', 'Fearow',
       'Ekans', 'Arbok', 'Pikachu', 'Raichu', 'Sandshrew', 'Sandslash',
       'Nidoran', 'Nidorina', 'Nidoqueen', 'Nidoran♂', 'Nidorino',
       'Nidoking', 'Clefairy', 'Clefable', 'Vulpix', 'Ninetales',
       'Jigglypuff', 'Wigglytuff', 'Zubat', 'Golbat', 'Oddish', 'Gloom',
       'Vileplume', 'Paras', 'Parasect', 'Venonat', 'Venomoth', 'Diglett',
       'Dugtrio', 'Meowth', 'Persian', 'Psyduck', 'Golduck', 'Mankey',
       'Primeape', 'Growlithe', 'Arcanine', 'Poliwag', 'Poliwhirl',
       'Poliwrath', 'Abra', 'Kadabra', 'Alakazam', 'Machop', 'Machoke',
       'Machamp', 'Bellsprout', 'Weepinbell', 'Victreebel', 'Tentacool',
       'Tentacruel', 'Geodude', 'Graveler', 'Golem', 'Ponyta', 'Rapidash',
       'Slowpoke', 'Slowbro', 'Magnemite', 'Magneton', "Farfetch'd",
       'Doduo', 'Dodrio', 'Seel', 'Dewgong', 'Grimer', 'Muk', 'Shellder',
       'Cloyster', 'Gastly', 'Haunter', 'Gengar', 'Onix', 'Drowzee',
       'Hypno', 'Krabby', 'Kingler', 'Voltorb', 'Electrode', 'Exeggcute',
       'Exeggutor', 'Cubone', 'Marowak', 'Hitmonlee', 'Hitmonchan',
       'Lickitung', 'Koffing', 'Weezing', 'Rhyhorn', 'Rhydon', 'Chansey',
       'Tangela', 'Kangaskhan', 'Horsea', 'Seadra', 'Goldeen', 'Seaking',
       'Staryu', 'Starmie', 'Mr. Mime', 'Scyther', 'Jynx', 'Electabuzz',
       'Magmar', 'Pinsir', 'Tauros', 'Magikarp', 'Gyarados', 'Lapras',
       'Ditto', 'Eevee', 'Vaporeon', 'Jolteon', 'Flareon', 'Porygon',
       'Omanyte', 'Omastar', 'Kabuto', 'Kabutops', 'Aerodactyl',
       'Snorlax', 'Articuno', 'Zapdos', 'Moltres', 'Dratini', 'Dragonair',
       'Dragonite', 'Mewtwo', 'Mew', 'Chikorita', 'Bayleef', 'Meganium',
       'Cyndaquil', 'Quilava', 'Typhlosion', 'Totodile', 'Croconaw',
       'Feraligatr', 'Sentret', 'Furret', 'Hoothoot', 'Noctowl', 'Ledyba',
       'Ledian', 'Spinarak', 'Ariados', 'Crobat', 'Chinchou', 'Lanturn',
       'Pichu', 'Cleffa', 'Igglybuff', 'Togepi', 'Togetic', 'Natu',
       'Xatu', 'Mareep', 'Flaaffy', 'Ampharos', 'Bellossom', 'Marill',
       'Azumarill', 'Sudowoodo', 'Politoed', 'Hoppip', 'Skiploom',
       'Jumpluff', 'Aipom', 'Sunkern', 'Sunflora', 'Yanma', 'Wooper',
       'Quagsire', 'Espeon', 'Umbreon', 'Murkrow', 'Slowking',
       'Misdreavus', 'Unown', 'Wobbuffet', 'Girafarig', 'Pineco',
       'Forretress', 'Dunsparce', 'Gligar', 'Steelix', 'Snubbull',
       'Granbull', 'Qwilfish', 'Scizor', 'Shuckle', 'Heracross',
       'Sneasel', 'Teddiursa', 'Ursaring', 'Slugma', 'Magcargo', 'Swinub',
       'Piloswine', 'Corsola', 'Remoraid', 'Octillery', 'Delibird',
       'Mantine', 'Skarmory', 'Houndour', 'Houndoom', 'Kingdra', 'Phanpy',
       'Donphan', 'Porygon2', 'Stantler', 'Smeargle', 'Tyrogue',
       'Hitmontop', 'Smoochum', 'Elekid', 'Magby', 'Miltank', 'Blissey',
       'Raikou', 'Entei', 'Suicune', 'Larvitar', 'Pupitar', 'Tyranitar',
       'Lugia', 'Ho-oh', 'Celebi', 'Treecko', 'Grovyle', 'Sceptile',
       'Torchic', 'Combusken', 'Blaziken', 'Mudkip', 'Marshtomp',
       'Swampert', 'Poochyena', 'Mightyena', 'Zigzagoon', 'Linoone',
       'Wurmple', 'Silcoon', 'Beautifly', 'Cascoon', 'Dustox', 'Lotad',
       'Lombre', 'Ludicolo', 'Seedot', 'Nuzleaf', 'Shiftry', 'Taillow',
       'Swellow', 'Wingull', 'Pelipper', 'Ralts', 'Kirlia', 'Gardevoir',
       'Surskit', 'Masquerain', 'Shroomish', 'Breloom', 'Slakoth',
       'Vigoroth', 'Slaking', 'Nincada', 'Ninjask', 'Shedinja', 'Whismur',
       'Loudred', 'Exploud', 'Makuhita', 'Hariyama', 'Azurill',
       'Nosepass', 'Skitty', 'Delcatty', 'Sableye', 'Mawile', 'Aron',
       'Lairon', 'Aggron', 'Meditite', 'Medicham', 'Electrike',
       'Manectric', 'Plusle', 'Minun', 'Volbeat', 'Illumise', 'Roselia',
       'Gulpin', 'Swalot', 'Carvanha', 'Sharpedo', 'Wailmer', 'Wailord',
       'Numel', 'Camerupt', 'Torkoal', 'Spoink', 'Grumpig', 'Spinda',
       'Trapinch', 'Vibrava', 'Flygon', 'Cacnea', 'Cacturne', 'Swablu',
       'Altaria', 'Zangoose', 'Seviper', 'Lunatone', 'Solrock',
       'Barboach', 'Whiscash', 'Corphish', 'Crawdaunt', 'Baltoy',
       'Claydol', 'Lileep', 'Cradily', 'Anorith', 'Armaldo', 'Feebas',
       'Milotic', 'Castform', 'Kecleon', 'Shuppet', 'Banette', 'Duskull',
       'Dusclops', 'Tropius', 'Chimecho', 'Absol', 'Wynaut', 'Snorunt',
       'Glalie', 'Spheal', 'Sealeo', 'Walrein', 'Clamperl', 'Huntail',
       'Gorebyss', 'Relicanth', 'Luvdisc', 'Bagon', 'Shelgon',
       'Salamence', 'Beldum', 'Metang', 'Metagross', 'Regirock', 'Regice',
       'Registeel', 'Latias', 'Latios', 'Kyogre', 'Groudon', 'Rayquaza',
       'Jirachi', 'Deoxys', 'Turtwig', 'Grotle', 'Torterra', 'Chimchar',
       'Monferno', 'Infernape', 'Piplup', 'Prinplup', 'Empoleon',
       'Starly', 'Staravia', 'Staraptor', 'Bidoof', 'Bibarel',
       'Kricketot', 'Kricketune', 'Shinx', 'Luxio', 'Luxray', 'Budew',
       'Roserade', 'Cranidos', 'Rampardos', 'Shieldon', 'Bastiodon',
       'Burmy', 'Wormadam', 'Mothim', 'Combee', 'Vespiquen', 'Pachirisu',
       'Buizel', 'Floatzel', 'Cherubi', 'Cherrim', 'Shellos', 'Gastrodon',
       'Ambipom', 'Drifloon', 'Drifblim', 'Buneary', 'Lopunny',
       'Mismagius', 'Honchkrow', 'Glameow', 'Purugly', 'Chingling',
       'Stunky', 'Skuntank', 'Bronzor', 'Bronzong', 'Bonsly', 'Mime Jr.',
       'Happiny', 'Chatot', 'Spiritomb', 'Gible', 'Gabite', 'Garchomp',
       'Munchlax', 'Riolu', 'Lucario', 'Hippopotas', 'Hippowdon',
       'Skorupi', 'Drapion', 'Croagunk', 'Toxicroak', 'Carnivine',
       'Finneon', 'Lumineon', 'Mantyke', 'Snover', 'Abomasnow', 'Weavile',
       'Magnezone', 'Lickilicky', 'Rhyperior', 'Tangrowth', 'Electivire',
       'Magmortar', 'Togekiss', 'Yanmega', 'Leafeon', 'Glaceon',
       'Gliscor', 'Mamoswine', 'Porygon-Z', 'Gallade', 'Probopass',
       'Dusknoir', 'Froslass', 'Rotom', 'Uxie', 'Mesprit', 'Azelf',
       'Dialga', 'Palkia', 'Heatran', 'Regigigas', 'Giratina',
       'Cresselia', 'Phione', 'Manaphy', 'Darkrai', 'Shaymin', 'Arceus',
       'Victini', 'Snivy', 'Servine', 'Serperior', 'Tepig', 'Pignite',
       'Emboar', 'Oshawott', 'Dewott', 'Samurott', 'Patrat', 'Watchog',
       'Lillipup', 'Herdier', 'Stoutland', 'Purrloin', 'Liepard',
       'Pansage', 'Simisage', 'Pansear', 'Simisear', 'Panpour',
       'Simipour', 'Munna', 'Musharna', 'Pidove', 'Tranquill', 'Unfezant',
       'Blitzle', 'Zebstrika', 'Roggenrola', 'Boldore', 'Gigalith',
       'Woobat', 'Swoobat', 'Drilbur', 'Excadrill', 'Audino', 'Timburr',
       'Gurdurr', 'Conkeldurr', 'Tympole', 'Palpitoad', 'Seismitoad',
       'Throh', 'Sawk', 'Sewaddle', 'Swadloon', 'Leavanny', 'Venipede',
       'Whirlipede', 'Scolipede', 'Cottonee', 'Whimsicott', 'Petilil',
       'Lilligant', 'Basculin', 'Sandile', 'Krokorok', 'Krookodile',
       'Darumaka', 'Darmanitan', 'Maractus', 'Dwebble', 'Crustle',
       'Scraggy', 'Scrafty', 'Sigilyph', 'Yamask', 'Cofagrigus',
       'Tirtouga', 'Carracosta', 'Archen', 'Archeops', 'Trubbish',
       'Garbodor', 'Zorua', 'Zoroark', 'Minccino', 'Cinccino', 'Gothita',
       'Gothorita', 'Gothitelle', 'Solosis', 'Duosion', 'Reuniclus',
       'Ducklett', 'Swanna', 'Vanillite', 'Vanillish', 'Vanilluxe',
       'Deerling', 'Sawsbuck', 'Emolga', 'Karrablast', 'Escavalier',
       'Foongus', 'Amoonguss', 'Frillish', 'Jellicent', 'Alomomola',
       'Joltik', 'Galvantula', 'Ferroseed', 'Ferrothorn', 'Klink',
       'Klang', 'Klinklang', 'Tynamo', 'Eelektrik', 'Eelektross',
       'Elgyem', 'Beheeyem', 'Litwick', 'Lampent', 'Chandelure', 'Axew',
       'Fraxure', 'Haxorus', 'Cubchoo', 'Beartic', 'Cryogonal', 'Shelmet',
       'Accelgor', 'Stunfisk', 'Mienfoo', 'Mienshao', 'Druddigon',
       'Golett', 'Golurk', 'Pawniard', 'Bisharp', 'Bouffalant', 'Rufflet',
       'Braviary', 'Vullaby', 'Mandibuzz', 'Heatmor', 'Durant', 'Deino',
       'Zweilous', 'Hydreigon', 'Larvesta', 'Volcarona', 'Cobalion',
       'Terrakion', 'Virizion', 'Tornadus', 'Thundurus', 'Reshiram',
       'Zekrom', 'Landorus', 'Kyurem', 'Keldeo', 'Meloetta', 'Genesect',
       'Chespin', 'Quilladin', 'Chesnaught', 'Fennekin', 'Braixen',
       'Delphox', 'Froakie', 'Frogadier', 'Greninja', 'Bunnelby',
       'Diggersby', 'Fletchling', 'Fletchinder', 'Talonflame',
       'Scatterbug', 'Spewpa', 'Vivillon', 'Litleo', 'Pyroar', 'Flabébé',
       'Floette', 'Florges', 'Skiddo', 'Gogoat', 'Pancham', 'Pangoro',
       'Furfrou', 'Espurr', 'Meowstic', 'Honedge', 'Doublade',
       'Aegislash', 'Spritzee', 'Aromatisse', 'Swirlix', 'Slurpuff',
       'Inkay', 'Malamar', 'Binacle', 'Barbaracle', 'Skrelp', 'Dragalge',
       'Clauncher', 'Clawitzer', 'Helioptile', 'Heliolisk', 'Tyrunt',
       'Tyrantrum', 'Amaura', 'Aurorus', 'Sylveon', 'Hawlucha', 'Dedenne',
       'Carbink', 'Goomy', 'Sliggoo', 'Goodra', 'Klefki', 'Phantump',
       'Trevenant', 'Pumpkaboo', 'Gourgeist', 'Bergmite', 'Avalugg',
       'Noibat', 'Noivern', 'Xerneas', 'Yveltal', 'Zygarde', 'Diancie',
       'Hoopa', 'Volcanion'], dtype=object)

"Bulbasaur" in pokemon.values

True

"Onix" in pokemon.values

True

Extract Values by Index Position

pokemon.head(3)

0    Bulbasaur
1      Ivysaur
2     Venusaur
Name: Pokemon, dtype: object

pokemon[2]  # we are passing index poistion 

'Venusaur'

pokemon[45]

'Paras'

pokemon[1]

'Ivysaur'

pokemon[[10,50,300]] # passing multiple index positions 

10      Metapod
50      Dugtrio
300    Delcatty
Name: Pokemon, dtype: object

pokemon[50:100]  # sequence of index values of range 

pokemon[:50]
pokemon[-30:]

pokemon[-30 : -10]

691     Clauncher
692     Clawitzer
693    Helioptile
694     Heliolisk
695        Tyrunt
696     Tyrantrum
697        Amaura
698       Aurorus
699       Sylveon
700      Hawlucha
701       Dedenne
702       Carbink
703         Goomy
704       Sliggoo
705        Goodra
706        Klefki
707      Phantump
708     Trevenant
709     Pumpkaboo
710     Gourgeist
Name: Pokemon, dtype: object

Extract values by Index Label

pokemon = pd.read_csv("pokemon.csv", index_col = "Pokemon", squeeze= True)

pokemon.head(3)

Pokemon
Bulbasaur    Grass
Ivysaur      Grass
Venusaur     Grass
Name: Type, dtype: object

pokemon[0]

'Grass'

pokemon["Bulbasaur"]

'Grass'

pokemon["Ditto"]

'Normal'

pokemon[["Pikachu","Digimon"]]

C:\Program Files\anaconda\lib\site-packages\pandas\core\series.py:705: FutureWarning: 
Passing list-likes to .loc or [] with any missing label will raise
KeyError in the future, you can use .reindex() as an alternative.

See the documentation here:
http://pandas.pydata.org/pandas-docs/stable/indexing.html#deprecate-loc-reindex-listlike
  return self.loc[key]

Pokemon
Pikachu    Electric
Digimon         NaN
Name: Type, dtype: object

pokemon["Bulbasaur" : "Pikachu"]

Pokemon
Bulbasaur        Grass
Ivysaur          Grass
Venusaur         Grass
Charmander        Fire
Charmeleon        Fire
Charizard         Fire
Squirtle         Water
Wartortle        Water
Blastoise        Water
Caterpie           Bug
Metapod            Bug
Butterfree         Bug
Weedle             Bug
Kakuna             Bug
Beedrill           Bug
Pidgey          Normal
Pidgeotto       Normal
Pidgeot         Normal
Rattata         Normal
Raticate        Normal
Spearow         Normal
Fearow          Normal
Ekans           Poison
Arbok           Poison
Pikachu       Electric
Name: Type, dtype: object

.get() method on a series

pokemon.head(3)

pokemon.sort_index(inplace = True)

pokemon.get(key= ["Moltres","Meowth"])

Pokemon
Moltres      Fire
Meowth     Normal
Name: Type, dtype: object

pokemon.get(key = "Digimon", default = "This is not a pokemon")

'This is not a pokemon'

pokemon.get(key = ["Charizard", "Digimon"], default = " This is not a pokemon")

C:\Program Files\anaconda\lib\site-packages\pandas\core\series.py:705: FutureWarning: 
Passing list-likes to .loc or [] with any missing label will raise
KeyError in the future, you can use .reindex() as an alternative.

See the documentation here:
http://pandas.pydata.org/pandas-docs/stable/indexing.html#deprecate-loc-reindex-listlike
  return self.loc[key]

Pokemon
Charizard    Fire
Digimon       NaN
Name: Type, dtype: object

math methods on Series Objects

google.head(3)

11    49.95
9     50.07
0     50.12
Name: Stock Price, dtype: float64

google.count()

3012

len(google)

3012

google.sum()

1006942.0

google.mean()

334.31009296148756

google.sum() / google.count()

334.3100929614874

google.std()

173.18720477113106

google.min()

49.95

google.max()

782.22

google.median()

283.315

google.mode()

0    291.21
dtype: float64

google.describe()

count    3012.000000
mean      334.310093
std       173.187205
min        49.950000
25%       218.045000
50%       283.315000
75%       443.000000
max       782.220000
Name: Stock Price, dtype: float64

The .idxmax() and .idxmin() methods

google.max()

782.22

google.min()

49.95

google.idxmax()  # index maxium number 

3011

google[3011]

782.22

google.idxmin()

11

google[11]

49.95

google[google.idxmin()]

49.95

the .value_counts() method in series

pokemon = pd.read_csv("pokemon.csv", index_col = "Pokemon", squeeze = True)

pokemon.head(3)

Pokemon
Bulbasaur    Grass
Ivysaur      Grass
Venusaur     Grass
Name: Type, dtype: object

pokemon.value_counts()  # new series all of the values are occured in number oftimes 

Water       105
Normal       93
Grass        66
Bug          63
Fire         47
Psychic      47
Rock         41
Electric     36
Ground       30
Poison       28
Dark         28
Fighting     25
Dragon       24
Ghost        23
Ice          23
Steel        22
Fairy        17
Flying        3
Name: Type, dtype: int64

pokemon.value_counts().sum()

721

pokemon.count()

721

pokemon.value_counts(ascending = True)

Flying        3
Fairy        17
Steel        22
Ice          23
Ghost        23
Dragon       24
Fighting     25
Dark         28
Poison       28
Ground       30
Electric     36
Rock         41
Psychic      47
Fire         47
Bug          63
Grass        66
Normal       93
Water       105
Name: Type, dtype: int64

The .apply() method in series 

which calls a function on every single value that occurs in the series 

google = pd.read_csv("google_stock_price.csv", squeeze = True)

google.head(6)

0    50.12
1    54.10
2    54.65
3    52.38
4    52.95
5    53.90
Name: Stock Price, dtype: float64

def classify_performence(number):
    if number < 300:
        return "OK"
    elif number >= 300 and number < 650:
        return "Satisfactory"
    else:
        return "Incrediable"

google.apply(classify_performence).tail()

3007    Incrediable
3008    Incrediable
3009    Incrediable
3010    Incrediable
3011    Incrediable
Name: Stock Price, dtype: object

google.head(6)

0    50.12
1    54.10
2    54.65
3    52.38
4    52.95
5    53.90
Name: Stock Price, dtype: float64

google.apply(lambda stock_price : stock_price + 1)  # anonamous function 

0        51.12
1        55.10
2        55.65
3        53.38
4        53.95
5        54.90
6        54.02
7        51.95
8        52.13
9        51.07
10       51.70
11       50.95
12       51.74
13       52.10
14       52.10
15       53.61
16       54.70
17       56.69
18       56.94
19       57.93
20       59.69
21       60.62
22       59.86
23       60.13
24       61.35
25       60.86
26       60.07
27       64.37
28       66.47
29       65.74
         ...  
2982    676.22
2983    669.26
2984    681.04
2985    685.11
2986    693.10
2987    700.21
2988    695.49
2989    698.77
2990    696.36
2991    706.63
2992    716.09
2993    721.64
2994    717.98
2995    721.95
2996    720.85
2997    734.78
2998    737.96
2999    742.19
3000    739.63
3001    743.74
3002    740.77
3003    739.42
3004    742.77
3005    746.91
3006    769.79
3007    773.88
3008    772.07
3009    774.18
3010    772.61
3011    783.22
Name: Stock Price, Length: 3012, dtype: float64

The .map() method 

pokemon_names = pd.read_csv("pokemon.csv", usecols = ["Pokemon"], squeeze = True)

pokemon_names.head(3)

0    Bulbasaur
1      Ivysaur
2     Venusaur
Name: Pokemon, dtype: object

pokemon_types = pd.read_csv("pokemon.csv", index_col = "Pokemon", squeeze = True)

pokemon_types.head(3)

Pokemon
Bulbasaur    Grass
Ivysaur      Grass
Venusaur     Grass
Name: Type, dtype: object

pokemon_names.map(pokemon_types)

0         Grass
1         Grass
2         Grass
3          Fire
4          Fire
5          Fire
6         Water
7         Water
8         Water
9           Bug
10          Bug
11          Bug
12          Bug
13          Bug
14          Bug
15       Normal
16       Normal
17       Normal
18       Normal
19       Normal
20       Normal
21       Normal
22       Poison
23       Poison
24     Electric
25     Electric
26       Ground
27       Ground
28       Poison
29       Poison
         ...   
691       Water
692       Water
693    Electric
694    Electric
695        Rock
696        Rock
697        Rock
698        Rock
699       Fairy
700    Fighting
701    Electric
702        Rock
703      Dragon
704      Dragon
705      Dragon
706       Steel
707       Ghost
708       Ghost
709       Ghost
710       Ghost
711         Ice
712         Ice
713      Flying
714      Flying
715       Fairy
716        Dark
717      Dragon
718        Rock
719     Psychic
720        Fire
Name: Pokemon, Length: 721, dtype: object

pokemon_types = pd.read_csv("pokemon.csv", index_col = "Pokemon", squeeze = True).to_dict()

pokemon_types

{'Abomasnow': 'Grass',
 'Abra': 'Psychic',
 'Absol': 'Dark',
 'Accelgor': 'Bug',
 'Aegislash': 'Steel',
 'Aerodactyl': 'Rock',
 'Aggron': 'Steel',
 'Aipom': 'Normal',
 'Alakazam': 'Psychic',
 'Alomomola': 'Water',
 'Altaria': 'Dragon',
 'Amaura': 'Rock',
 'Ambipom': 'Normal',
 'Amoonguss': 'Grass',
 'Ampharos': 'Electric',
 'Anorith': 'Rock',
 'Arbok': 'Poison',
 'Arcanine': 'Fire',
 'Arceus': 'Normal',
 'Archen': 'Rock',
 'Archeops': 'Rock',
 'Ariados': 'Bug',
 'Armaldo': 'Rock',
 'Aromatisse': 'Fairy',
 'Aron': 'Steel',
 'Articuno': 'Ice',
 'Audino': 'Normal',
 'Aurorus': 'Rock',
 'Avalugg': 'Ice',
 'Axew': 'Dragon',
 'Azelf': 'Psychic',
 'Azumarill': 'Water',
 'Azurill': 'Normal',
 'Bagon': 'Dragon',
 'Baltoy': 'Ground',
 'Banette': 'Ghost',
 'Barbaracle': 'Rock',
 'Barboach': 'Water',
 'Basculin': 'Water',
 'Bastiodon': 'Rock',
 'Bayleef': 'Grass',
 'Beartic': 'Ice',
 'Beautifly': 'Bug',
 'Beedrill': 'Bug',
 'Beheeyem': 'Psychic',
 'Beldum': 'Steel',
 'Bellossom': 'Grass',
 'Bellsprout': 'Grass',
 'Bergmite': 'Ice',
 'Bibarel': 'Normal',
 'Bidoof': 'Normal',
 'Binacle': 'Rock',
 'Bisharp': 'Dark',
 'Blastoise': 'Water',
 'Blaziken': 'Fire',
 'Blissey': 'Normal',
 'Blitzle': 'Electric',
 'Boldore': 'Rock',
 'Bonsly': 'Rock',
 'Bouffalant': 'Normal',
 'Braixen': 'Fire',
 'Braviary': 'Normal',
 'Breloom': 'Grass',
 'Bronzong': 'Steel',
 'Bronzor': 'Steel',
 'Budew': 'Grass',
 'Buizel': 'Water',
 'Bulbasaur': 'Grass',
 'Buneary': 'Normal',
 'Bunnelby': 'Normal',
 'Burmy': 'Bug',
 'Butterfree': 'Bug',
 'Cacnea': 'Grass',
 'Cacturne': 'Grass',
 'Camerupt': 'Fire',
 'Carbink': 'Rock',
 'Carnivine': 'Grass',
 'Carracosta': 'Water',
 'Carvanha': 'Water',
 'Cascoon': 'Bug',
 'Castform': 'Normal',
 'Caterpie': 'Bug',
 'Celebi': 'Psychic',
 'Chandelure': 'Ghost',
 'Chansey': 'Normal',
 'Charizard': 'Fire',
 'Charmander': 'Fire',
 'Charmeleon': 'Fire',
 'Chatot': 'Normal',
 'Cherrim': 'Grass',
 'Cherubi': 'Grass',
 'Chesnaught': 'Grass',
 'Chespin': 'Grass',
 'Chikorita': 'Grass',
 'Chimchar': 'Fire',
 'Chimecho': 'Psychic',
 'Chinchou': 'Water',
 'Chingling': 'Psychic',
 'Cinccino': 'Normal',
 'Clamperl': 'Water',
 'Clauncher': 'Water',
 'Clawitzer': 'Water',
 'Claydol': 'Ground',
 'Clefable': 'Fairy',
 'Clefairy': 'Fairy',
 'Cleffa': 'Fairy',
 'Cloyster': 'Water',
 'Cobalion': 'Steel',
 'Cofagrigus': 'Ghost',
 'Combee': 'Bug',
 'Combusken': 'Fire',
 'Conkeldurr': 'Fighting',
 'Corphish': 'Water',
 'Corsola': 'Water',
 'Cottonee': 'Grass',
 'Cradily': 'Rock',
 'Cranidos': 'Rock',
 'Crawdaunt': 'Water',
 'Cresselia': 'Psychic',
 'Croagunk': 'Poison',
 'Crobat': 'Poison',
 'Croconaw': 'Water',
 'Crustle': 'Bug',
 'Cryogonal': 'Ice',
 'Cubchoo': 'Ice',
 'Cubone': 'Ground',
 'Cyndaquil': 'Fire',
 'Darkrai': 'Dark',
 'Darmanitan': 'Fire',
 'Darumaka': 'Fire',
 'Dedenne': 'Electric',
 'Deerling': 'Normal',
 'Deino': 'Dark',
 'Delcatty': 'Normal',
 'Delibird': 'Ice',
 'Delphox': 'Fire',
 'Deoxys': 'Psychic',
 'Dewgong': 'Water',
 'Dewott': 'Water',
 'Dialga': 'Steel',
 'Diancie': 'Rock',
 'Diggersby': 'Normal',
 'Diglett': 'Ground',
 'Ditto': 'Normal',
 'Dodrio': 'Normal',
 'Doduo': 'Normal',
 'Donphan': 'Ground',
 'Doublade': 'Steel',
 'Dragalge': 'Poison',
 'Dragonair': 'Dragon',
 'Dragonite': 'Dragon',
 'Drapion': 'Poison',
 'Dratini': 'Dragon',
 'Drifblim': 'Ghost',
 'Drifloon': 'Ghost',
 'Drilbur': 'Ground',
 'Drowzee': 'Psychic',
 'Druddigon': 'Dragon',
 'Ducklett': 'Water',
 'Dugtrio': 'Ground',
 'Dunsparce': 'Normal',
 'Duosion': 'Psychic',
 'Durant': 'Bug',
 'Dusclops': 'Ghost',
 'Dusknoir': 'Ghost',
 'Duskull': 'Ghost',
 'Dustox': 'Bug',
 'Dwebble': 'Bug',
 'Eelektrik': 'Electric',
 'Eelektross': 'Electric',
 'Eevee': 'Normal',
 'Ekans': 'Poison',
 'Electabuzz': 'Electric',
 'Electivire': 'Electric',
 'Electrike': 'Electric',
 'Electrode': 'Electric',
 'Elekid': 'Electric',
 'Elgyem': 'Psychic',
 'Emboar': 'Fire',
 'Emolga': 'Electric',
 'Empoleon': 'Water',
 'Entei': 'Fire',
 'Escavalier': 'Bug',
 'Espeon': 'Psychic',
 'Espurr': 'Psychic',
 'Excadrill': 'Ground',
 'Exeggcute': 'Grass',
 'Exeggutor': 'Grass',
 'Exploud': 'Normal',
 "Farfetch'd": 'Normal',
 'Fearow': 'Normal',
 'Feebas': 'Water',
 'Fennekin': 'Fire',
 'Feraligatr': 'Water',
 'Ferroseed': 'Grass',
 'Ferrothorn': 'Grass',
 'Finneon': 'Water',
 'Flaaffy': 'Electric',
 'Flabébé': 'Fairy',
 'Flareon': 'Fire',
 'Fletchinder': 'Fire',
 'Fletchling': 'Normal',
 'Floatzel': 'Water',
 'Floette': 'Fairy',
 'Florges': 'Fairy',
 'Flygon': 'Ground',
 'Foongus': 'Grass',
 'Forretress': 'Bug',
 'Fraxure': 'Dragon',
 'Frillish': 'Water',
 'Froakie': 'Water',
 'Frogadier': 'Water',
 'Froslass': 'Ice',
 'Furfrou': 'Normal',
 'Furret': 'Normal',
 'Gabite': 'Dragon',
 'Gallade': 'Psychic',
 'Galvantula': 'Bug',
 'Garbodor': 'Poison',
 'Garchomp': 'Dragon',
 'Gardevoir': 'Psychic',
 'Gastly': 'Ghost',
 'Gastrodon': 'Water',
 'Genesect': 'Bug',
 'Gengar': 'Ghost',
 'Geodude': 'Rock',
 'Gible': 'Dragon',
 'Gigalith': 'Rock',
 'Girafarig': 'Normal',
 'Giratina': 'Ghost',
 'Glaceon': 'Ice',
 'Glalie': 'Ice',
 'Glameow': 'Normal',
 'Gligar': 'Ground',
 'Gliscor': 'Ground',
 'Gloom': 'Grass',
 'Gogoat': 'Grass',
 'Golbat': 'Poison',
 'Goldeen': 'Water',
 'Golduck': 'Water',
 'Golem': 'Rock',
 'Golett': 'Ground',
 'Golurk': 'Ground',
 'Goodra': 'Dragon',
 'Goomy': 'Dragon',
 'Gorebyss': 'Water',
 'Gothita': 'Psychic',
 'Gothitelle': 'Psychic',
 'Gothorita': 'Psychic',
 'Gourgeist': 'Ghost',
 'Granbull': 'Fairy',
 'Graveler': 'Rock',
 'Greninja': 'Water',
 'Grimer': 'Poison',
 'Grotle': 'Grass',
 'Groudon': 'Ground',
 'Grovyle': 'Grass',
 'Growlithe': 'Fire',
 'Grumpig': 'Psychic',
 'Gulpin': 'Poison',
 'Gurdurr': 'Fighting',
 'Gyarados': 'Water',
 'Happiny': 'Normal',
 'Hariyama': 'Fighting',
 'Haunter': 'Ghost',
 'Hawlucha': 'Fighting',
 'Haxorus': 'Dragon',
 'Heatmor': 'Fire',
 'Heatran': 'Fire',
 'Heliolisk': 'Electric',
 'Helioptile': 'Electric',
 'Heracross': 'Bug',
 'Herdier': 'Normal',
 'Hippopotas': 'Ground',
 'Hippowdon': 'Ground',
 'Hitmonchan': 'Fighting',
 'Hitmonlee': 'Fighting',
 'Hitmontop': 'Fighting',
 'Ho-oh': 'Fire',
 'Honchkrow': 'Dark',
 'Honedge': 'Steel',
 'Hoopa': 'Psychic',
 'Hoothoot': 'Normal',
 'Hoppip': 'Grass',
 'Horsea': 'Water',
 'Houndoom': 'Dark',
 'Houndour': 'Dark',
 'Huntail': 'Water',
 'Hydreigon': 'Dark',
 'Hypno': 'Psychic',
 'Igglybuff': 'Normal',
 'Illumise': 'Bug',
 'Infernape': 'Fire',
 'Inkay': 'Dark',
 'Ivysaur': 'Grass',
 'Jellicent': 'Water',
 'Jigglypuff': 'Normal',
 'Jirachi': 'Steel',
 'Jolteon': 'Electric',
 'Joltik': 'Bug',
 'Jumpluff': 'Grass',
 'Jynx': 'Ice',
 'Kabuto': 'Rock',
 'Kabutops': 'Rock',
 'Kadabra': 'Psychic',
 'Kakuna': 'Bug',
 'Kangaskhan': 'Normal',
 'Karrablast': 'Bug',
 'Kecleon': 'Normal',
 'Keldeo': 'Water',
 'Kingdra': 'Water',
 'Kingler': 'Water',
 'Kirlia': 'Psychic',
 'Klang': 'Steel',
 'Klefki': 'Steel',
 'Klink': 'Steel',
 'Klinklang': 'Steel',
 'Koffing': 'Poison',
 'Krabby': 'Water',
 'Kricketot': 'Bug',
 'Kricketune': 'Bug',
 'Krokorok': 'Ground',
 'Krookodile': 'Ground',
 'Kyogre': 'Water',
 'Kyurem': 'Dragon',
 'Lairon': 'Steel',
 'Lampent': 'Ghost',
 'Landorus': 'Ground',
 'Lanturn': 'Water',
 'Lapras': 'Water',
 'Larvesta': 'Bug',
 'Larvitar': 'Rock',
 'Latias': 'Dragon',
 'Latios': 'Dragon',
 'Leafeon': 'Grass',
 'Leavanny': 'Bug',
 'Ledian': 'Bug',
 'Ledyba': 'Bug',
 'Lickilicky': 'Normal',
 'Lickitung': 'Normal',
 'Liepard': 'Dark',
 'Lileep': 'Rock',
 'Lilligant': 'Grass',
 'Lillipup': 'Normal',
 'Linoone': 'Normal',
 'Litleo': 'Fire',
 'Litwick': 'Ghost',
 'Lombre': 'Water',
 'Lopunny': 'Normal',
 'Lotad': 'Water',
 'Loudred': 'Normal',
 'Lucario': 'Fighting',
 'Ludicolo': 'Water',
 'Lugia': 'Psychic',
 'Lumineon': 'Water',
 'Lunatone': 'Rock',
 'Luvdisc': 'Water',
 'Luxio': 'Electric',
 'Luxray': 'Electric',
 'Machamp': 'Fighting',
 'Machoke': 'Fighting',
 'Machop': 'Fighting',
 'Magby': 'Fire',
 'Magcargo': 'Fire',
 'Magikarp': 'Water',
 'Magmar': 'Fire',
 'Magmortar': 'Fire',
 'Magnemite': 'Electric',
 'Magneton': 'Electric',
 'Magnezone': 'Electric',
 'Makuhita': 'Fighting',
 'Malamar': 'Dark',
 'Mamoswine': 'Ice',
 'Manaphy': 'Water',
 'Mandibuzz': 'Dark',
 'Manectric': 'Electric',
 'Mankey': 'Fighting',
 'Mantine': 'Water',
 'Mantyke': 'Water',
 'Maractus': 'Grass',
 'Mareep': 'Electric',
 'Marill': 'Water',
 'Marowak': 'Ground',
 'Marshtomp': 'Water',
 'Masquerain': 'Bug',
 'Mawile': 'Steel',
 'Medicham': 'Fighting',
 'Meditite': 'Fighting',
 'Meganium': 'Grass',
 'Meloetta': 'Normal',
 'Meowstic': 'Psychic',
 'Meowth': 'Normal',
 'Mesprit': 'Psychic',
 'Metagross': 'Steel',
 'Metang': 'Steel',
 'Metapod': 'Bug',
 'Mew': 'Psychic',
 'Mewtwo': 'Psychic',
 'Mienfoo': 'Fighting',
 'Mienshao': 'Fighting',
 'Mightyena': 'Dark',
 'Milotic': 'Water',
 'Miltank': 'Normal',
 'Mime Jr.': 'Psychic',
 'Minccino': 'Normal',
 'Minun': 'Electric',
 'Misdreavus': 'Ghost',
 'Mismagius': 'Ghost',
 'Moltres': 'Fire',
 'Monferno': 'Fire',
 'Mothim': 'Bug',
 'Mr. Mime': 'Psychic',
 'Mudkip': 'Water',
 'Muk': 'Poison',
 'Munchlax': 'Normal',
 'Munna': 'Psychic',
 'Murkrow': 'Dark',
 'Musharna': 'Psychic',
 'Natu': 'Psychic',
 'Nidoking': 'Poison',
 'Nidoqueen': 'Poison',
 'Nidoran': 'Poison',
 'Nidoran♂': 'Poison',
 'Nidorina': 'Poison',
 'Nidorino': 'Poison',
 'Nincada': 'Bug',
 'Ninetales': 'Fire',
 'Ninjask': 'Bug',
 'Noctowl': 'Normal',
 'Noibat': 'Flying',
 'Noivern': 'Flying',
 'Nosepass': 'Rock',
 'Numel': 'Fire',
 'Nuzleaf': 'Grass',
 'Octillery': 'Water',
 'Oddish': 'Grass',
 'Omanyte': 'Rock',
 'Omastar': 'Rock',
 'Onix': 'Rock',
 'Oshawott': 'Water',
 'Pachirisu': 'Electric',
 'Palkia': 'Water',
 'Palpitoad': 'Water',
 'Pancham': 'Fighting',
 'Pangoro': 'Fighting',
 'Panpour': 'Water',
 'Pansage': 'Grass',
 'Pansear': 'Fire',
 'Paras': 'Bug',
 'Parasect': 'Bug',
 'Patrat': 'Normal',
 'Pawniard': 'Dark',
 'Pelipper': 'Water',
 'Persian': 'Normal',
 'Petilil': 'Grass',
 'Phanpy': 'Ground',
 'Phantump': 'Ghost',
 'Phione': 'Water',
 'Pichu': 'Electric',
 'Pidgeot': 'Normal',
 'Pidgeotto': 'Normal',
 'Pidgey': 'Normal',
 'Pidove': 'Normal',
 'Pignite': 'Fire',
 'Pikachu': 'Electric',
 'Piloswine': 'Ice',
 'Pineco': 'Bug',
 'Pinsir': 'Bug',
 'Piplup': 'Water',
 'Plusle': 'Electric',
 'Politoed': 'Water',
 'Poliwag': 'Water',
 'Poliwhirl': 'Water',
 'Poliwrath': 'Water',
 'Ponyta': 'Fire',
 'Poochyena': 'Dark',
 'Porygon': 'Normal',
 'Porygon-Z': 'Normal',
 'Porygon2': 'Normal',
 'Primeape': 'Fighting',
 'Prinplup': 'Water',
 'Probopass': 'Rock',
 'Psyduck': 'Water',
 'Pumpkaboo': 'Ghost',
 'Pupitar': 'Rock',
 'Purrloin': 'Dark',
 'Purugly': 'Normal',
 'Pyroar': 'Fire',
 'Quagsire': 'Water',
 'Quilava': 'Fire',
 'Quilladin': 'Grass',
 'Qwilfish': 'Water',
 'Raichu': 'Electric',
 'Raikou': 'Electric',
 'Ralts': 'Psychic',
 'Rampardos': 'Rock',
 'Rapidash': 'Fire',
 'Raticate': 'Normal',
 'Rattata': 'Normal',
 'Rayquaza': 'Dragon',
 'Regice': 'Ice',
 'Regigigas': 'Normal',
 'Regirock': 'Rock',
 'Registeel': 'Steel',
 'Relicanth': 'Water',
 'Remoraid': 'Water',
 'Reshiram': 'Dragon',
 'Reuniclus': 'Psychic',
 'Rhydon': 'Ground',
 'Rhyhorn': 'Ground',
 'Rhyperior': 'Ground',
 'Riolu': 'Fighting',
 'Roggenrola': 'Rock',
 'Roselia': 'Grass',
 'Roserade': 'Grass',
 'Rotom': 'Electric',
 'Rufflet': 'Normal',
 'Sableye': 'Dark',
 'Salamence': 'Dragon',
 'Samurott': 'Water',
 'Sandile': 'Ground',
 'Sandshrew': 'Ground',
 'Sandslash': 'Ground',
 'Sawk': 'Fighting',
 'Sawsbuck': 'Normal',
 'Scatterbug': 'Bug',
 'Sceptile': 'Grass',
 'Scizor': 'Bug',
 'Scolipede': 'Bug',
 'Scrafty': 'Dark',
 'Scraggy': 'Dark',
 'Scyther': 'Bug',
 'Seadra': 'Water',
 'Seaking': 'Water',
 'Sealeo': 'Ice',
 'Seedot': 'Grass',
 'Seel': 'Water',
 'Seismitoad': 'Water',
 'Sentret': 'Normal',
 'Serperior': 'Grass',
 'Servine': 'Grass',
 'Seviper': 'Poison',
 'Sewaddle': 'Bug',
 'Sharpedo': 'Water',
 'Shaymin': 'Grass',
 'Shedinja': 'Bug',
 'Shelgon': 'Dragon',
 'Shellder': 'Water',
 'Shellos': 'Water',
 'Shelmet': 'Bug',
 'Shieldon': 'Rock',
 'Shiftry': 'Grass',
 'Shinx': 'Electric',
 'Shroomish': 'Grass',
 'Shuckle': 'Bug',
 'Shuppet': 'Ghost',
 'Sigilyph': 'Psychic',
 'Silcoon': 'Bug',
 'Simipour': 'Water',
 'Simisage': 'Grass',
 'Simisear': 'Fire',
 'Skarmory': 'Steel',
 'Skiddo': 'Grass',
 'Skiploom': 'Grass',
 'Skitty': 'Normal',
 'Skorupi': 'Poison',
 'Skrelp': 'Poison',
 'Skuntank': 'Poison',
 'Slaking': 'Normal',
 'Slakoth': 'Normal',
 'Sliggoo': 'Dragon',
 'Slowbro': 'Water',
 'Slowking': 'Water',
 'Slowpoke': 'Water',
 'Slugma': 'Fire',
 'Slurpuff': 'Fairy',
 'Smeargle': 'Normal',
 'Smoochum': 'Ice',
 'Sneasel': 'Dark',
 'Snivy': 'Grass',
 'Snorlax': 'Normal',
 'Snorunt': 'Ice',
 'Snover': 'Grass',
 'Snubbull': 'Fairy',
 'Solosis': 'Psychic',
 'Solrock': 'Rock',
 'Spearow': 'Normal',
 'Spewpa': 'Bug',
 'Spheal': 'Ice',
 'Spinarak': 'Bug',
 'Spinda': 'Normal',
 'Spiritomb': 'Ghost',
 'Spoink': 'Psychic',
 'Spritzee': 'Fairy',
 'Squirtle': 'Water',
 'Stantler': 'Normal',
 'Staraptor': 'Normal',
 'Staravia': 'Normal',
 'Starly': 'Normal',
 'Starmie': 'Water',
 'Staryu': 'Water',
 'Steelix': 'Steel',
 'Stoutland': 'Normal',
 'Stunfisk': 'Ground',
 'Stunky': 'Poison',
 'Sudowoodo': 'Rock',
 'Suicune': 'Water',
 'Sunflora': 'Grass',
 'Sunkern': 'Grass',
 'Surskit': 'Bug',
 'Swablu': 'Normal',
 'Swadloon': 'Bug',
 'Swalot': 'Poison',
 'Swampert': 'Water',
 'Swanna': 'Water',
 'Swellow': 'Normal',
 'Swinub': 'Ice',
 'Swirlix': 'Fairy',
 'Swoobat': 'Psychic',
 'Sylveon': 'Fairy',
 'Taillow': 'Normal',
 'Talonflame': 'Fire',
 'Tangela': 'Grass',
 'Tangrowth': 'Grass',
 'Tauros': 'Normal',
 'Teddiursa': 'Normal',
 'Tentacool': 'Water',
 'Tentacruel': 'Water',
 'Tepig': 'Fire',
 'Terrakion': 'Rock',
 'Throh': 'Fighting',
 'Thundurus': 'Electric',
 'Timburr': 'Fighting',
 'Tirtouga': 'Water',
 'Togekiss': 'Fairy',
 'Togepi': 'Fairy',
 'Togetic': 'Fairy',
 'Torchic': 'Fire',
 'Torkoal': 'Fire',
 'Tornadus': 'Flying',
 'Torterra': 'Grass',
 'Totodile': 'Water',
 'Toxicroak': 'Poison',
 'Tranquill': 'Normal',
 'Trapinch': 'Ground',
 'Treecko': 'Grass',
 'Trevenant': 'Ghost',
 'Tropius': 'Grass',
 'Trubbish': 'Poison',
 'Turtwig': 'Grass',
 'Tympole': 'Water',
 'Tynamo': 'Electric',
 'Typhlosion': 'Fire',
 'Tyranitar': 'Rock',
 'Tyrantrum': 'Rock',
 'Tyrogue': 'Fighting',
 'Tyrunt': 'Rock',
 'Umbreon': 'Dark',
 'Unfezant': 'Normal',
 'Unown': 'Psychic',
 'Ursaring': 'Normal',
 'Uxie': 'Psychic',
 'Vanillish': 'Ice',
 'Vanillite': 'Ice',
 'Vanilluxe': 'Ice',
 'Vaporeon': 'Water',
 'Venipede': 'Bug',
 'Venomoth': 'Bug',
 'Venonat': 'Bug',
 'Venusaur': 'Grass',
 'Vespiquen': 'Bug',
 'Vibrava': 'Ground',
 'Victini': 'Psychic',
 'Victreebel': 'Grass',
 'Vigoroth': 'Normal',
 'Vileplume': 'Grass',
 'Virizion': 'Grass',
 'Vivillon': 'Bug',
 'Volbeat': 'Bug',
 'Volcanion': 'Fire',
 'Volcarona': 'Bug',
 'Voltorb': 'Electric',
 'Vullaby': 'Dark',
 'Vulpix': 'Fire',
 'Wailmer': 'Water',
 'Wailord': 'Water',
 'Walrein': 'Ice',
 'Wartortle': 'Water',
 'Watchog': 'Normal',
 'Weavile': 'Dark',
 'Weedle': 'Bug',
 'Weepinbell': 'Grass',
 'Weezing': 'Poison',
 'Whimsicott': 'Grass',
 'Whirlipede': 'Bug',
 'Whiscash': 'Water',
 'Whismur': 'Normal',
 'Wigglytuff': 'Normal',
 'Wingull': 'Water',
 'Wobbuffet': 'Psychic',
 'Woobat': 'Psychic',
 'Wooper': 'Water',
 'Wormadam': 'Bug',
 'Wurmple': 'Bug',
 'Wynaut': 'Psychic',
 'Xatu': 'Psychic',
 'Xerneas': 'Fairy',
 'Yamask': 'Ghost',
 'Yanma': 'Bug',
 'Yanmega': 'Bug',
 'Yveltal': 'Dark',
 'Zangoose': 'Normal',
 'Zapdos': 'Electric',
 'Zebstrika': 'Electric',
 'Zekrom': 'Dragon',
 'Zigzagoon': 'Normal',
 'Zoroark': 'Dark',
 'Zorua': 'Dark',
 'Zubat': 'Poison',
 'Zweilous': 'Dark',
 'Zygarde': 'Dragon'}

pokemon_names.map(pokemon_types)

0         Grass
1         Grass
2         Grass
3          Fire
4          Fire
5          Fire
6         Water
7         Water
8         Water
9           Bug
10          Bug
11          Bug
12          Bug
13          Bug
14          Bug
15       Normal
16       Normal
17       Normal
18       Normal
19       Normal
20       Normal
21       Normal
22       Poison
23       Poison
24     Electric
25     Electric
26       Ground
27       Ground
28       Poison
29       Poison
         ...   
691       Water
692       Water
693    Electric
694    Electric
695        Rock
696        Rock
697        Rock
698        Rock
699       Fairy
700    Fighting
701    Electric
702        Rock
703      Dragon
704      Dragon
705      Dragon
706       Steel
707       Ghost
708       Ghost
709       Ghost
710       Ghost
711         Ice
712         Ice
713      Flying
714      Flying
715       Fairy
716        Dark
717      Dragon
718        Rock
719     Psychic
720        Fire
Name: Pokemon, Length: 721, dtype: object

