

Correlation

?

test the association between quantitative variables 

import seaborn as sns

?

import matplotlib.pyplot as plt

?

%matplotlib inline

i = sns.load_dataset("iris")

i.head(5)

	sepal_length 	sepal_width 	petal_length 	petal_width 	species
0 	5.1 	3.5 	1.4 	0.2 	setosa
1 	4.9 	3.0 	1.4 	0.2 	setosa
2 	4.7 	3.2 	1.3 	0.2 	setosa
3 	4.6 	3.1 	1.5 	0.2 	setosa
4 	5.0 	3.6 	1.4 	0.2 	setosa

corr = i.corr()

corr

	sepal_length 	sepal_width 	petal_length 	petal_width
sepal_length 	1.000000 	-0.117570 	0.871754 	0.817941
sepal_width 	-0.117570 	1.000000 	-0.428440 	-0.366126
petal_length 	0.871754 	-0.428440 	1.000000 	0.962865
petal_width 	0.817941 	-0.366126 	0.962865 	1.000000

plt.scatter(i['sepal_length'], i['petal_length'],

           marker = 'x',

           color = 'b',

           alpha =0.7,

           s =124)

?

plt.title("sepal length vs sepal length")

plt.xlabel("Spal Length")

plt.ylabel("Sepal Width")

plt.show()

# visualize the correlation -corr plot

from statsmodels import api as sm

C:\Program Files\anaconda\lib\site-packages\statsmodels\compat\pandas.py:56: FutureWarning: The pandas.core.datetools module is deprecated and will be removed in a future version. Please use the pandas.tseries module instead.
  from pandas.core import datetools

sm.graphics.plot_corr(corr,xnames= list(corr.columns))

plt.show()

import pandas as pd

df = pd.read_csv("happy2015.csv")

df.head(3)

	Country 	Region 	Happiness Rank 	Happiness Score 	Standard Error 	Economy (GDP per Capita) 	Family 	Health (Life Expectancy) 	Freedom 	Trust (Government Corruption) 	Generosity 	Dystopia Residual
0 	Switzerland 	Western Europe 	1 	7.587 	0.03411 	1.39651 	1.34951 	0.94143 	0.66557 	0.41978 	0.29678 	2.51738
1 	Iceland 	Western Europe 	2 	7.561 	0.04884 	1.30232 	1.40223 	0.94784 	0.62877 	0.14145 	0.43630 	2.70201
2 	Denmark 	Western Europe 	3 	7.527 	0.03328 	1.32548 	1.36058 	0.87464 	0.64938 	0.48357 	0.34139 	2.49204

df3 = df[["Happiness Score","Family","Economy (GDP per Capita)","Freedom","Generosity"]]

df3.head(3)

	Happiness Score 	Family 	Economy (GDP per Capita) 	Freedom 	Generosity
0 	7.587 	1.34951 	1.39651 	0.66557 	0.29678
1 	7.561 	1.40223 	1.30232 	0.62877 	0.43630
2 	7.527 	1.36058 	1.32548 	0.64938 	0.34139

corr = df3.corr()

corr

	Happiness Score 	Family 	Economy (GDP per Capita) 	Freedom 	Generosity
Happiness Score 	1.000000 	0.740605 	0.780966 	0.568211 	0.180319
Family 	0.740605 	1.000000 	0.645299 	0.441518 	0.087513
Economy (GDP per Capita) 	0.780966 	0.645299 	1.000000 	0.370300 	-0.010465
Freedom 	0.568211 	0.441518 	0.370300 	1.000000 	0.373916
Generosity 	0.180319 	0.087513 	-0.010465 	0.373916 	1.000000

sm.graphics.plot_corr(corr,xnames = list(corr.columns))

plt.show()

?

?

?

?

?

?

?

